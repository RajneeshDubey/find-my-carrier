import * as React from "react";
import { CommonProps } from "../utility/commonProps";
import { OverlayProps } from "../Overlay";
export { OverlayCloseButton as PanelCloseButton } from "../Overlay";
export declare type PanelPosition = "left" | "right";
export declare type PanelSize = "large" | "medium" | "small";
export interface PanelTitleProps {
    /**
     * The `id` property for the panel's title.
     */
    titleId: string;
}
export interface PanelPortalProps extends Omit<OverlayProps, "title">, CommonProps {
    /**
     * The actions for the panel.
     */
    actions?: React.ReactNode;
    /**
     * The content for the panel.
     */
    children: React.ReactNode;
    /**
     * The callback fired when the panel requests to close.
     */
    onClose: (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | PointerEvent | MouseEvent | TouchEvent | KeyboardEvent) => void;
    /**
     * The props spread to the panel's close button.
     */
    closeButtonProps?: Omit<React.ComponentPropsWithRef<"button">, "ariaLabel" | "children" | "className" | "onClick" | "type">;
    /**
     * The position for the panel.
     */
    position?: PanelPosition;
    /**
     * The size for the panel.
     *
     * @default 'small'
     */
    size?: PanelSize;
    /**
     * The title for the panel.
     */
    title: React.ReactNode | React.FunctionComponent<PanelTitleProps>;
}
export declare const PanelPortal: React.FunctionComponent<PanelPortalProps>;
