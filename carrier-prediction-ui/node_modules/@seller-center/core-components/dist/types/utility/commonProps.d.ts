import * as React from "react";
export interface CommonProps {
    /**
     * If provided, additional class name to provide on the root element.
     *
     * @deprecated This property will be omitted in a future version. Please use the `UNSAFE_className` property.
     */
    className?: string;
    /**
     * If provided, style to provide to the root element.
     *
     * @deprecated This property will be ommited in a future version. Please use the `UNSAFE_style` property.
     */
    style?: React.CSSProperties;
    /**
     * If provided, the additional class name to provide to the root element.
     *
     * @note This property is prefixed with `UNSAFE` as its use often results in
     * unintended side effects. This property may be deprecated in a future
     * version.
     */
    UNSAFE_className?: string;
    /**
     * If provided, the `style` to provide to the root element.
     *
     * @note This property is prefixed with `UNSAFE` as its use often results in
     * unintended side effects. This property may be deprecated in a future
     * version.
     */
    UNSAFE_style?: React.CSSProperties;
}
declare type AppliedCommonProps<T> = T & {
    /**
     * If provided, the additional class name to provide to the root element.
     */
    className?: string;
    /**
     * If provided, the `style` to provide to the root element.
     */
    style?: React.CSSProperties;
};
/**
 * Tranform common props to properties for use with a HTMLElement.
 *
 * @todo Deprecate `className` and `style` in the next major release.
 */
export declare const applyCommonProps: <T extends Object = {}>(props: CommonProps & T, Component: React.FunctionComponent<any>, isWarnDisabled?: boolean) => AppliedCommonProps<T>;
export {};
