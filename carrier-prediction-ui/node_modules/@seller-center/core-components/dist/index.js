'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var classNames = require('classnames');
var bodyScrollLock = require('body-scroll-lock');
var ReactDOM = require('react-dom');
var reactPopper = require('react-popper');
var FocusLock = require('react-focus-lock');
var reactTable = require('react-table');
var DateCalendar = require('react-datepicker');
var dateFnsTz = require('date-fns-tz');
require('date-fns');
require('react-datepicker/dist/react-datepicker.css');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () {
            return e[k];
          }
        });
      }
    });
  }
  n['default'] = e;
  return Object.freeze(n);
}

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);
var FocusLock__default = /*#__PURE__*/_interopDefaultLegacy(FocusLock);
var DateCalendar__default = /*#__PURE__*/_interopDefaultLegacy(DateCalendar);

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var _excluded = ["a11yLabel", "size", "style"];

function _extends$1() {
  _extends$1 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$1.apply(this, arguments);
}

function ownKeys$1(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys$1(Object(source), true).forEach(function (key) {
        _defineProperty$1(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$1(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty$1(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutProperties$1(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose$1(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
var withIcon = function withIcon(WrappedComponent) {
  return function (props) {
    var a11yLabel = props.a11yLabel,
        _props$size = props.size,
        size = _props$size === void 0 ? "small" : _props$size,
        style = props.style,
        rest = _objectWithoutProperties$1(props, _excluded);

    var fontSize = {
      small: 16,
      medium: 24,
      large: 32
    }[size];
    var verticalAlign = {
      small: "-0.175em",
      medium: "-0.25em",
      large: "-0.325em"
    }[size];
    var a11yProps = a11yLabel ? {
      "aria-label": a11yLabel,
      role: "img"
    } : {
      "aria-hidden": true,
      role: "presentation"
    };
    return /*#__PURE__*/React.createElement(WrappedComponent, _extends$1({}, rest, a11yProps, {
      // eslint-disable-next-line react/forbid-component-props
      style: _objectSpread(_objectSpread({}, style), {}, {
        fontSize: fontSize,
        verticalAlign: verticalAlign
      })
    }));
  };
};

function _extends$2() {
  _extends$2 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$2.apply(this, arguments);
}

function SvgArrowRight(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$2({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M9.646 4.146a.5.5 0 0 1 .708 0l3.5 3.5.011.013a.503.503 0 0 1 .033.039l.013.018A.497.497 0 0 1 14 8v.02a.503.503 0 0 1-.005.052L14 8a.502.502 0 0 1-.146.354l.044-.052a.503.503 0 0 1-.033.04l-.011.012-3.5 3.5-.07.057a.5.5 0 0 1-.638-.057l-.057-.07a.5.5 0 0 1 .057-.638L12.292 8.5H2.5a.5.5 0 0 1-.09-.992L2.5 7.5h9.794L9.646 4.854l-.057-.07a.5.5 0 0 1 .057-.638z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon = withIcon(SvgArrowRight);

function _extends$3() {
  _extends$3 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$3.apply(this, arguments);
}

function SvgCalendar(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$3({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M10.5 2a.5.5 0 0 1 .492.41L11 2.5V3h3.25a.75.75 0 0 1 .75.75v9.5a.75.75 0 0 1-.75.75H1.75a.75.75 0 0 1-.75-.75v-9.5A.75.75 0 0 1 1.75 3H5v-.5a.5.5 0 0 1 .992-.09L6 2.5V3h4v-.5a.5.5 0 0 1 .5-.5zM14 7H2v6h12V7zm-1.5 2v2h-2V9h2zM5 4H2v2h12V4h-3v.5a.5.5 0 0 1-.992.09L10 4.5V4H6v.5a.5.5 0 0 1-.992.09L5 4.5V4z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$1 = withIcon(SvgCalendar);

function _extends$4() {
  _extends$4 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$4.apply(this, arguments);
}

function SvgCaretDown(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$4({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M8 10l3.5-4h-7z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$2 = withIcon(SvgCaretDown);

function _extends$5() {
  _extends$5 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$5.apply(this, arguments);
}

function SvgCheck(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$5({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M12.646 3.896a.5.5 0 0 1 .75.66l-.042.048-7.5 7.5a.5.5 0 0 1-.655.045l-.047-.04-2.5-2.429a.5.5 0 0 1 .649-.758l.047.04 2.147 2.085 7.151-7.15z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$3 = withIcon(SvgCheck);

function _extends$6() {
  _extends$6 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$6.apply(this, arguments);
}

function SvgCheckCircle(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$6({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M8 1a7 7 0 1 1 0 14A7 7 0 0 1 8 1zm0 1a6 6 0 1 0 0 12A6 6 0 0 0 8 2zm3.528 3.146a.5.5 0 0 1 .059.638l-.058.07-4.991 5a.5.5 0 0 1-.657.044l-.069-.064-1.486-1.65a.5.5 0 0 1 .678-.73l.066.06 1.132 1.259 4.62-4.626a.5.5 0 0 1 .706 0z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$4 = withIcon(SvgCheckCircle);

function _extends$7() {
  _extends$7 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$7.apply(this, arguments);
}

function SvgChevronDown(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$7({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M3.146 5.396a.5.5 0 0 1 .66-.041l.048.041L8 9.543l4.146-4.147a.5.5 0 0 1 .66-.041l.048.041a.5.5 0 0 1 .041.66l-.041.048-4.5 4.5a.5.5 0 0 1-.66.041l-.048-.041-4.5-4.5a.5.5 0 0 1 0-.708z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$5 = withIcon(SvgChevronDown);

function _extends$8() {
  _extends$8 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$8.apply(this, arguments);
}

function SvgChevronLeft(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$8({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M5.396 7.646a.5.5 0 0 0-.041.66l.041.048 4.5 4.5a.5.5 0 0 0 .75-.66l-.042-.048L6.458 8l4.146-4.146a.5.5 0 0 0 .041-.66l-.041-.048a.5.5 0 0 0-.66-.041l-.048.041-4.5 4.5z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$6 = withIcon(SvgChevronLeft);

function _extends$9() {
  _extends$9 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$9.apply(this, arguments);
}

function SvgChevronRight(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$9({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M10.604 7.646a.5.5 0 0 1 .041.66l-.041.048-4.5 4.5a.5.5 0 0 1-.75-.66l.042-.048L9.543 8 5.396 3.854a.5.5 0 0 1-.041-.66l.041-.048a.5.5 0 0 1 .66-.041l.048.041 4.5 4.5z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$7 = withIcon(SvgChevronRight);

function _extends$a() {
  _extends$a = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$a.apply(this, arguments);
}

function SvgClose(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$a({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M4.008 3.131l.059.052L8 7.116l3.933-3.933.059-.052a.625.625 0 0 1 .877.877l-.052.059L8.884 8l3.933 3.933a.625.625 0 0 1-.825.936l-.059-.052L8 8.884l-3.933 3.933-.059.052a.625.625 0 0 1-.877-.877l.052-.059L7.116 8 3.183 4.067a.625.625 0 0 1 .825-.936z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$8 = withIcon(SvgClose);

function _extends$b() {
  _extends$b = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$b.apply(this, arguments);
}

function SvgCloseCircleFill(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$b({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M8 1a7 7 0 1 1 0 14A7 7 0 0 1 8 1zm2.854 4.146a.5.5 0 0 0-.66-.041l-.048.041L8 7.293 5.854 5.146l-.048-.041a.5.5 0 0 0-.66.749L7.293 8l-2.147 2.146-.057.07a.5.5 0 0 0 .717.68l.048-.042L8 8.707l2.146 2.147.048.041a.5.5 0 0 0 .66-.749L8.707 8l2.147-2.146.057-.07a.5.5 0 0 0-.057-.638z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$9 = withIcon(SvgCloseCircleFill);

function _extends$c() {
  _extends$c = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$c.apply(this, arguments);
}

function SvgExclamationCircle(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$c({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M8 1a7 7 0 1 1 0 14A7 7 0 0 1 8 1zm0 1.2a5.8 5.8 0 1 0 0 11.6A5.8 5.8 0 0 0 8 2.2zm0 8.698a.602.602 0 1 1 0 1.204.602.602 0 0 1 0-1.204zM8 3.9a.6.6 0 0 1 .592.503L8.6 4.5v5.14a.6.6 0 0 1-1.192.098L7.4 9.641V4.5a.6.6 0 0 1 .6-.6z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$a = withIcon(SvgExclamationCircle);

function _extends$d() {
  _extends$d = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$d.apply(this, arguments);
}

function SvgExclamationCircleFill(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$d({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M8 1a7 7 0 1 1 0 14A7 7 0 0 1 8 1zm0 9.898a.602.602 0 1 0 0 1.204.602.602 0 0 0 0-1.204zM8 3.9a.6.6 0 0 0-.6.6v5.14l.008.098A.6.6 0 0 0 8.6 9.641V4.5l-.008-.097A.6.6 0 0 0 8 3.9z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$b = withIcon(SvgExclamationCircleFill);

function _extends$e() {
  _extends$e = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$e.apply(this, arguments);
}

function SvgInfoCircle(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$e({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M8 1a7 7 0 1 1 0 14A7 7 0 0 1 8 1zm0 1a6 6 0 1 0 0 12A6 6 0 0 0 8 2zm-1 9.5a.5.5 0 0 1-.09-.992L7 10.5h.499v-3H7a.5.5 0 0 1-.492-.41L6.5 7a.5.5 0 0 1 .41-.492L7 6.5h1.5l-.001 4H9a.5.5 0 0 1 .09.992L9 11.5H7zm.879-7.121a.621.621 0 1 1 0 1.242.621.621 0 0 1 0-1.242z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$c = withIcon(SvgInfoCircle);

function _extends$f() {
  _extends$f = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$f.apply(this, arguments);
}

function SvgSearch(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$f({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M6.5 1a5.5 5.5 0 0 1 4.227 9.02l4.127 4.126a.5.5 0 0 1-.638.765l-.07-.057-4.126-4.127A5.5 5.5 0 1 1 6.5 1zm0 1a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9z",
    fillRule: "evenodd"
  }));
}

var WrappedIcon$d = withIcon(SvgSearch);

function _extends$g() {
  _extends$g = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$g.apply(this, arguments);
}

function SvgWarning(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$g({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("g", {
    fillRule: "evenodd"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M8.557 1.132c.201.1.37.253.49.44l.067.117 5.754 11.508a1.246 1.246 0 0 1-.97 1.795l-.144.008H2.246a1.246 1.246 0 0 1-1.172-1.67l.058-.133L6.886 1.69a1.246 1.246 0 0 1 1.671-.557zm-.74.95l-.037.054-5.754 11.508a.246.246 0 0 0 .163.35l.057.006h11.508a.246.246 0 0 0 .241-.293l-.021-.063L8.22 2.136a.246.246 0 0 0-.066-.081l-.044-.029-.063-.021a.246.246 0 0 0-.23.077z"
  }), /*#__PURE__*/React.createElement("circle", {
    r: 0.5,
    cx: 8,
    cy: 12
  }), /*#__PURE__*/React.createElement("path", {
    d: "M8 5.5a.5.5 0 0 1 .492.41L8.5 6v4.14a.5.5 0 0 1-.992.09l-.008-.09V6a.5.5 0 0 1 .5-.5z"
  })));
}

var WrappedIcon$e = withIcon(SvgWarning);

var style = {"alert":"Alert-module_alert__3qh2m","leading":"Alert-module_leading__12DBA","content":"Alert-module_content__3zsnI","error":"Alert-module_error__VqBrs","info":"Alert-module_info__1uG7z","success":"Alert-module_success__1V0OC","warning":"Alert-module_warning__1c2o-"};

var Alert = props => {
  var {
    children,
    className,
    variant = "success"
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className", "variant"]);

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style.alert, variant === "error" && style.error, variant === "info" && style.info, variant === "success" && style.success, variant === "warning" && style.warning, className)
  }, rest), /*#__PURE__*/React.createElement("span", {
    className: style.leading
  }, variant === "error" && /*#__PURE__*/React.createElement(WrappedIcon$a, null), variant === "info" && /*#__PURE__*/React.createElement(WrappedIcon$c, null), variant === "success" && /*#__PURE__*/React.createElement(WrappedIcon$4, null), variant === "warning" && /*#__PURE__*/React.createElement(WrappedIcon$e, null)), /*#__PURE__*/React.createElement("span", {
    className: style.content
  }, children));
};

var style$1 = {"badge":"Badge-module_badge__3fKsk","primary":"Badge-module_primary__2jig5","secondary":"Badge-module_secondary__2V_3X"};

var Badge = _ref => {
  var {
    variant = "primary",
    className
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["variant", "className"]);

  return /*#__PURE__*/React__default['default'].createElement("span", _extends({
    className: classNames__default['default'](style$1.badge, className, variant === "primary" && style$1.primary, variant === "secondary" && style$1.secondary)
  }, rest));
};

/**
 * Tranform common props to properties for use with a HTMLElement.
 *
 * @todo Deprecate `className` and `style` in the next major release.
 */

/* eslint-disable complexity */
var applyCommonProps = (props, Component, isWarnDisabled = false) => {
  /* eslint-disable no-console */

  /* istanbul ignore if */
  if (process.env.NODE_ENV === "development") {
    if (!isWarnDisabled) {
      if (props.className) {
        console.warn("".concat(Component.displayName || Component.name || "Unknown", ".className property will be deprecated in the next major version. Please use the \"UNSAFE_className\" property."));
      }

      if (props.style) {
        console.warn("".concat(Component.displayName || Component.name || "Unknown", ".style property will be deprecated in the next major version. Please use the \"UNSAFE_style\" property."));
      }
    }
  }
  /* eslint-enable no-console */


  var appliedProps = {};

  for (var key in props) {
    if (props.hasOwnProperty(key)) {
      var value = props[key];

      if (key === "UNSAFE_className" || key === "className") {
        // @ts-ignore
        appliedProps.className = classNames__default['default'](appliedProps.className, value);
      } else if (key === "UNSAFE_style" || key === "style") {
        appliedProps.style = appliedProps.style ? _objectSpread2(_objectSpread2({}, appliedProps.style), value) : value;
      } else {
        appliedProps[key] = value;
      }
    }
  }

  return appliedProps;
};

var style$2 = {"banner":"Banner-module_banner__1eFdK","contentContainer":"Banner-module_contentContainer__1TZ9o","content":"Banner-module_content__2DWiM","error":"Banner-module_error__1wGet","info":"Banner-module_info__r3zIp","success":"Banner-module_success__PswEy","warning":"Banner-module_warning__3tXaq","close":"Banner-module_close__1_Suy","closeIcon":"Banner-module_closeIcon__3NEJJ"};

var Banner = props => {
  var _applyCommonProps = applyCommonProps(props, Banner, true),
      {
    children,
    className,
    closeButtonProps,
    onClose,
    variant = "info"
  } = _applyCommonProps,
      rest = _objectWithoutProperties(_applyCommonProps, ["children", "className", "closeButtonProps", "onClose", "variant"]);

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$2.banner, variant === "error" && style$2.error, variant === "info" && style$2.info, variant === "success" && style$2.success, variant === "warning" && style$2.warning, className),
    role: "alert"
  }, rest), /*#__PURE__*/React.createElement("div", {
    className: style$2.contentContainer
  }, /*#__PURE__*/React.createElement("div", {
    className: style$2.content
  }, children)), /*#__PURE__*/React.createElement("button", _extends({
    "aria-label": "Close",
    className: style$2.close,
    onClick: onClose,
    type: "button"
  }, closeButtonProps), /*#__PURE__*/React.createElement(WrappedIcon$8, {
    className: style$2.closeIcon
  })));
};

var style$3 = {"blue5":"Box-module_blue5__4VCw-","blue10":"Box-module_blue10__xjZmd","blue50":"Box-module_blue50__hzlAs","gray5":"Box-module_gray5__2GhFa","gray10":"Box-module_gray10__3AkjE","gray20":"Box-module_gray20__3lWTy","gray50":"Box-module_gray50__2XKxU","green5":"Box-module_green5__3FRXZ","green10":"Box-module_green10__p_528","green50":"Box-module_green50__Bz4SZ","orange5":"Box-module_orange5__3yImx","orange10":"Box-module_orange10__2zk0g","orange50":"Box-module_orange50__3S-8z","pink5":"Box-module_pink5__B3m7d","pink10":"Box-module_pink10__1zpu8","pink50":"Box-module_pink50__1iHHK","purple5":"Box-module_purple5__11_mq","purple10":"Box-module_purple10__1-wxB","purple50":"Box-module_purple50__zhDIQ","red5":"Box-module_red5__9E0Fl","red10":"Box-module_red10__3L2Wo","red50":"Box-module_red50__2igeB","spark5":"Box-module_spark5__39_77","spark10":"Box-module_spark10__1pyQI","spark50":"Box-module_spark50__r8aCw","yellow5":"Box-module_yellow5__1kGEb","yellow10":"Box-module_yellow10__2cTQd","yellow50":"Box-module_yellow50__1gzto"};

var Box = _ref => {
  var {
    bg,
    className
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["bg", "className"]);

  // const { bg, className, ...rest } = props;
  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](bg && style$3[bg], className)
  }, rest));
};

/**
 * Assert state which your program assumes to be true.
 *
 * IFF `babel-plugin-dev-expression` is being used, invariant message will be
 * stripped in production, but the invariant will remain to ensure logic does
 * not differ in production.
 *
 * @param {boolean} condition - State to assert.
 * @param {string} message - Message to be thrown when not in production.
 * @returns {void}
 */
var invariant = (condition, message) => {
  if (condition) {
    return;
  }

  if (process.env.NODE_ENV === "production") {
    // eslint-disable-next-line no-console
    console.error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
  } else {
    throw new Error("Error: ".concat(message || "Invariant failed."));
  }
};

var style$4 = {"breadcrumb":"Breadcrumb-module_breadcrumb__28c9W","item":"Breadcrumb-module_item__2UqMP","separator":"Breadcrumb-module_separator__3vaYa"};

var Breadcrumb = props => {
  var {
    children,
    className
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className"]);

  var breadcrumbItems = React.Children.toArray(children);
  var hasBreadcrumbItems = breadcrumbItems.length > 0;
  invariant(hasBreadcrumbItems, "Invalid prop `children` supplied to `Breadcrumb`.");

  if (!hasBreadcrumbItems) {
    return null;
  }

  return /*#__PURE__*/React.createElement("nav", _extends({
    "aria-label": "breadcrumb",
    className: className
  }, rest), /*#__PURE__*/React.createElement("ol", {
    className: style$4.breadcrumb,
    itemScope: true,
    itemType: "//schema.org/BreadcrumbList"
  }, React.Children.map(breadcrumbItems, (child, index) => {
    return /*#__PURE__*/React.createElement("li", {
      className: style$4.item,
      itemProp: "itemListElement",
      itemScope: true,
      itemType: "//schema.org/ListItem"
    }, child, index !== breadcrumbItems.length - 1 && /*#__PURE__*/React.createElement("span", {
      "aria-hidden": true,
      className: style$4.separator
    }, "/"), /*#__PURE__*/React.createElement("meta", {
      itemProp: "position",
      content: "".concat(index + 1)
    }));
  })));
};

// This file does not have 100% code coverage.
// TODO: add coverage for the "istanbul ignore next" lines
var getTarget = target => {
  if (target === "") {
    /* istanbul ignore next */
    return {};
  } // @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#Security_and_privacy_concerns}


  if (target === "_blank") {
    /* istanbul ignore next */
    return {
      target,
      rel: "noopener noreferrer"
    };
  }

  return {
    target
  };
};

var style$5 = {"link":"Link-module_link__2dMyg"};

var Link = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    children,
    className,
    target
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className", "target"]);

  return /*#__PURE__*/React.createElement("a", _extends({
    className: classNames__default['default'](style$5.link, className),
    ref: ref
  }, getTarget(target), rest), children);
});
Link.displayName = "Link";

var style$6 = {"breadcrumbItem":"BreadcrumbItem-module_breadcrumbItem__16syI","current":"BreadcrumbItem-module_current__19Zcs"};

var BreadcrumbItem = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    children,
    className,
    isCurrent = false
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className", "isCurrent"]);

  return /*#__PURE__*/React.createElement(Link, _extends({
    className: classNames__default['default'](style$6.breadcrumbItem, isCurrent && style$6.current, className),
    itemProp: "item",
    ref: ref // "location" represents the current location within an environment or context;
    // @see {@breadcrumbItem https://tink.uk/using-the-aria-current-attribute/}

  }, isCurrent && {
    "aria-current": "location"
  }, rest), /*#__PURE__*/React.createElement("span", {
    itemProp: "name"
  }, children));
});
BreadcrumbItem.displayName = "BreadcrumbItem";

var style$7 = {"button":"Button-module_button__1yqRw","primary":"Button-module_primary__2-Hb2","secondary":"Button-module_secondary__2KYUW","tertiary":"Button-module_tertiary__1O3f9","isFluid":"Button-module_isFluid__1u3T6","small":"Button-module_small__2tl0e","medium":"Button-module_medium__GxVky","large":"Button-module_large__1nbMn","leading":"Button-module_leading__3pH-e","trailing":"Button-module_trailing__1vpkE"};

/**
 * import { Button } from "@seller-center/core-components"
 */
var Button = props => {
  var {
    as,
    buttonRef,
    className,
    children,
    isFluid = false,
    leading,
    size = "small",
    trailing,
    target,
    type = "button",
    variant = "secondary"
  } = props,
      rest = _objectWithoutProperties(props, ["as", "buttonRef", "className", "children", "isFluid", "leading", "size", "trailing", "target", "type", "variant"]);

  var classes = classNames__default['default'](style$7.button, variant === "primary" && style$7.primary, variant === "secondary" && style$7.secondary, variant === "tertiary" && style$7.tertiary, isFluid && style$7.isFluid, size === "large" && style$7.large, size === "medium" && style$7.medium, size === "small" && style$7.small, className);
  var contents = /*#__PURE__*/React.createElement(React.Fragment, null, leading && /*#__PURE__*/React.createElement("span", {
    className: style$7.leading
  }, leading), children, trailing && /*#__PURE__*/React.createElement("span", {
    className: style$7.trailing
  }, trailing));

  var anchorKeyDown = e => {
    // istanbul ignore next
    if (e.key !== " ") {
      return;
    }

    var onClick = props.onClick;
    onClick === null || onClick === void 0 ? void 0 : onClick(e); // istanbul ignore next

    if (e.defaultPrevented || !props.href) {
      return;
    }

    location.assign(props.href);
  }; // TODO Anoop - useCallback had issues when transpiled.
  // const anchorKeyDown = React.useCallback(
  //   (e) => {
  //     if (e.key !== " ") {
  //       return;
  //     }
  //     const onClick = props.onClick as ButtonAnchorProps["onClick"];
  //     onClick?.(e);
  //     if (e.defaultPrevented || !props.href) {
  //       return;
  //     }
  //     location.assign(props.href);
  //   },
  //   [props.onClick, props.href]
  // );


  if (as === "a") {
    return /*#__PURE__*/React.createElement("a", _extends({
      className: classes,
      ref: buttonRef
    }, rest, {
      onKeyDown: anchorKeyDown
    }, getTarget(target)), contents);
  } // Disabling because dynamic types are not allowed for buttons. See: https://github.com/yannickcr/eslint-plugin-react/issues/1846

  /* eslint-disable react/button-has-type */


  return /*#__PURE__*/React.createElement("button", _extends({
    className: classes,
    type: type,
    ref: buttonRef
  }, rest), contents);
};

var style$8 = {"buttonGroup":"ButtonGroup-module_buttonGroup__2tUZn","item":"ButtonGroup-module_item__2k-ia"};

var ButtonGroup = props => {
  var {
    children,
    className
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className"]);

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$8.buttonGroup, className)
  }, rest), React.Children.map(children, child => {
    return /*#__PURE__*/React.createElement("div", {
      className: style$8.item
    }, child);
  }));
};

var style$9 = {"card":"Card-module_card__1WeT9","small":"Card-module_small__3sYqu","medium":"Card-module_medium__3y5Xs","large":"Card-module_large__NhBti"};

var Card = _ref => {
  var {
    children,
    className,
    size = "medium"
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["children", "className", "size"]);

  // const { children, className, size = "medium", ...rest } = props;
  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$9.card, size === "medium" && style$9.medium, size === "large" && style$9.large, size === "small" && style$9.small, className)
  }, rest), children);
};

var idMap = {};
/**
 * Create a no-conflict id.
 *
 * @param {string} scope — The scope used to generate a unique id.
 * @returns {string} — id
 */

var generateId = scope => {
  var value = idMap[scope];
  var nextValue = 0;

  if (typeof value !== "undefined") {
    nextValue = value + 1;
  }

  idMap[scope] = nextValue;
  return "ld_".concat(scope, "_").concat(nextValue);
};

/**
 * A function to create a no-conflict accessible id for DOM nodes.
 *
 * @param {string} scope — The scope used to generate a unique id.
 * @param {string} [id] — The custom id used to generate the node id.
 * @returns {string} — id
 */

var getNodeId = (scope, id) => {
  if (id) {
    return id;
  }

  return generateId(scope);
};

var style$a = {"label":"Checkbox-module_label__23H1t","checked":"Checkbox-module_checked__2sFcR","isDisabled":"Checkbox-module_isDisabled__uhcim","input":"Checkbox-module_input__3z4z5","checkbox":"Checkbox-module_checkbox__2-1xX","hasLabel":"Checkbox-module_hasLabel__3ELc3"};

var Checkbox = /*#__PURE__*/React.forwardRef(( // props:CheckboxProps
_ref, ref) => {
  var {
    a11yLabelledBy,
    checkboxProps = {},
    checked = false,
    className,
    disabled = false,
    id: initialId,
    label,
    name,
    onChange,
    value
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["a11yLabelledBy", "checkboxProps", "checked", "className", "disabled", "id", "label", "name", "onChange", "value"]);

  // const {
  //   a11yLabelledBy,
  //   checkboxProps = {},
  //   checked = false,
  //   className,
  //   disabled = false,
  //   id: initialId,
  //   label,
  //   name,
  //   onChange,
  //   value,
  //   ...rest
  // } = props;
  var labelCount = (label ? 1 : 0) + (a11yLabelledBy ? 1 : 0) === 1;
  invariant(labelCount, "`Checkbox` accessibility violation. `Checkbox` requires a `label` OR an `a11yLabelledBy`.");

  var {
    className: checkboxClassName
  } = checkboxProps,
      checkboxRest = _objectWithoutProperties(checkboxProps, ["className"]);

  var id = getNodeId("checkbox", initialId);
  var input = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("input", _extends({
    checked: checked,
    className: classNames__default['default'](style$a.input, checkboxClassName),
    disabled: disabled,
    id: id,
    name: name,
    onChange: onChange,
    ref: ref,
    type: "checkbox"
  }, a11yLabelledBy && {
    "aria-labelledby": a11yLabelledBy
  }, value && {
    value
  }, checkboxRest)), /*#__PURE__*/React.createElement("i", {
    className: classNames__default['default'](style$a.checkbox, !!label && style$a.hasLabel)
  }));
  return /*#__PURE__*/React.createElement("label", _extends({
    className: classNames__default['default'](style$a.label, checked && style$a.checked, disabled && style$a.isDisabled, className),
    htmlFor: id
  }, rest), input, label);
});
Checkbox.displayName = "Checkbox";

var style$b = {"chip":"Chip-module_chip__2KRBv","selected":"Chip-module_selected__21W-K","small":"Chip-module_small__1EmJi","large":"Chip-module_large__2G1dj","leading":"Chip-module_leading__IUWbw","trailing":"Chip-module_trailing__1iCNi"};

var Chip = /*#__PURE__*/React__default['default'].forwardRef((_ref, ref) => {
  var {
    children,
    className,
    leading,
    trailing,
    selected = false,
    size = "small"
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["children", "className", "leading", "trailing", "selected", "size"]);

  // const { children, className, leading, trailing, selected = false, size = "small", ...rest } = props;
  // const  = props;
  return /*#__PURE__*/React__default['default'].createElement("button", _extends({
    "aria-pressed": selected,
    className: classNames__default['default'](style$b.chip, size === "large" && style$b.large, size === "small" && style$b.small, selected && style$b.selected, className),
    ref: ref,
    type: "button"
  }, rest), leading && /*#__PURE__*/React__default['default'].createElement("span", {
    className: style$b.leading
  }, leading), children, trailing && /*#__PURE__*/React__default['default'].createElement("span", {
    className: style$b.trailing
  }, trailing));
});
Chip.displayName = "Chip";

var style$c = {"chipGroup":"ChipGroup-module_chipGroup__GJRfu","item":"ChipGroup-module_item__37BOV"};

var ChipGroup = _ref => {
  var {
    children,
    className
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["children", "className"]);

  // const { children, className, ...rest } = props;
  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$c.chipGroup, className)
  }, rest), React.Children.map(children, child => {
    return /*#__PURE__*/React.createElement("div", {
      className: style$c.item
    }, child);
  }));
};

// This file does not have 100% code coverage.
// TODO: add coverage for the "istanbul ignore next" line
var throttle = (fn, timeout) => {
  var isCalled = false; // eslint-disable-next-line @typescript-eslint/no-explicit-any

  return (...args) => {
    /* istanbul ignore if */
    if (isCalled) {
      /* istanbul ignore next */
      return;
    }

    isCalled = true;
    setTimeout(() => {
      fn(...args);
      isCalled = false;
    }, timeout);
  };
};

var style$d = {"collapsible":"Collapse-module_collapsible__2rKkm","hidden":"Collapse-module_hidden__1LjuN"};

var Collapse = _ref => {
  var {
    children,
    className,
    isOpen = false,
    minHeight = 0
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["children", "className", "isOpen", "minHeight"]);

  // const { children, className, isOpen = false, minHeight = 0, ...rest } = props;
  var [maxHeight, setMaxHeight] = React.useState();
  var ref = React.useRef(null);
  var contentRef = React.useRef(null);
  var isHidden = !isOpen && minHeight === 0; // NOTE: Auto prevents transitions on open content.

  var contentHeight = maxHeight || "auto";

  if (!isOpen) {
    contentHeight = minHeight;
  }
  /**
   * NOTE: This hook manages the case where the child content size changes while the
   * component is open / visible
   */


  React.useEffect(() => {
    var {
      current
    } = contentRef; // istanbul ignore next

    var observer = new ResizeObserver(entries => {
      setMaxHeight(entries[0].target.scrollHeight);
    });
    /* istanbul ignore else: branch coverage fix */

    if (current) {
      observer.observe(current);
    }

    return () => {
      /* istanbul ignore else: branch coverage fix */
      if (current) {
        observer.unobserve(current);
      }
    };
  }, [contentRef]);
  /**
   * NOTE: This hook manages happy path height recalculations. Hook dependencies are finiky so please
   * be careful of that. Ensure that this component gets properly rendered in all conditions—including `Modal`.
   */

  React.useEffect(() => {
    var {
      current
    } = ref;
    setMaxHeight(current === null || current === void 0 ? void 0 : current.scrollHeight);
  }, [maxHeight]);
  /**
   * Note: This hook manages accessibility and visibility. Edge case where bottom
   * margin is not calculated in scrollHeight. Once transition ends this will
   * ensure height is updated.
   */

  React.useEffect(() => {
    var {
      current
    } = ref;
    /* istanbul ignore else: branch coverage fix */

    if (current) {
      current.style.visibility = isHidden ? "hidden" : "";
    }
    /* istanbul ignore next */


    var onTransitionEnd = () => {
      // NOTE: Once content is collapsed, we need to hide it from screen readers.
      if (current && isHidden) {
        current.style.visibility = "hidden";
        return;
      }
      /* istanbul ignore else: branch coverage fix */


      if (maxHeight === (current === null || current === void 0 ? void 0 : current.scrollHeight)) {
        return;
      }
      /* istanbul ignore next: ignoring edge case */


      setMaxHeight(current === null || current === void 0 ? void 0 : current.scrollHeight);
    };

    current === null || current === void 0 ? void 0 : current.addEventListener("transitionend", onTransitionEnd);
    return () => {
      current === null || current === void 0 ? void 0 : current.removeEventListener("transitionend", onTransitionEnd);
    };
  }, [isHidden, maxHeight]);
  /**
   * NOTE: This hook manages changes to the component height when the browser resizes.
   */

  React.useEffect(() => {
    var onResize = throttle(() => {
      var {
        current
      } = ref; // Set content height on page resize.

      setMaxHeight(current === null || current === void 0 ? void 0 : current.scrollHeight);
    }, 33.33);
    window.addEventListener("resize", onResize);
    return () => {
      window.removeEventListener("resize", onResize);
    };
  }, []);
  return /*#__PURE__*/React.createElement("div", _extends({
    "aria-hidden": isHidden,
    className: classNames__default['default'](style$d.collapsible, isHidden && style$d.hidden, className),
    ref: ref // eslint-disable-next-line react/forbid-dom-props
    ,
    style: {
      maxHeight: contentHeight
    }
  }, rest), /*#__PURE__*/React.createElement("div", {
    ref: contentRef
  }, children));
};

var style$e = {"container":"Container-module_container__3Oxpr"};

var Container = props => {
  var {
    children,
    className
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className"]);

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$e.container, className)
  }, rest), children);
};

var style$f = {"divider":"Divider-module_divider__3muA9"};

var Divider = _ref => {
  var {
    "aria-label": ariaLabel,
    className,
    title
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["aria-label", "className", "title"]);

  // const { "aria-label": ariaLabel, className, title, ...rest } = props;
  // Convert boolean strings to pure booleans. !bool can have unintended side-effects.
  // `ariaHidden` should default to `true` unless overridden.
  var ariaHidden = !(rest["aria-hidden"] === "false" || rest["aria-hidden"] === false);
  invariant(!!(ariaHidden || !ariaHidden && (ariaLabel !== undefined || title !== undefined)), "`Divider` accessibility violation. `Divider` requires an accessible label if `aria-hidden` is false.");
  return /*#__PURE__*/React.createElement("hr", _extends({
    "aria-hidden": ariaHidden,
    className: classNames__default['default'](style$f.divider, className)
  }, title && {
    title
  }, rest));
};

var style$g = {"dropdownContainer":"Dropdown-module_dropdownContainer__1be4R","container":"Dropdown-module_container__33lYJ","actionModals":"Dropdown-module_actionModals__3gTvW","popoverContainer":"Dropdown-module_popoverContainer__2JeSd","contentStyle":"Dropdown-module_contentStyle__1r7ml","innerPopoverContainer":"Dropdown-module_innerPopoverContainer__3TUh_","emptyTick":"Dropdown-module_emptyTick__3M1Z7","selectIcon":"Dropdown-module_selectIcon__2KHII","options":"Dropdown-module_options__12zaA"};

var style$h = {"popover":"BasePopover-module_popover__1-I3B","nubbin":"BasePopover-module_nubbin__3GSYv","top":"BasePopover-module_top__2INPh","right":"BasePopover-module_right__2Wv2n","bottom":"BasePopover-module_bottom__1-sHM","left":"BasePopover-module_left__zp1Wb","content":"BasePopover-module_content__3SfUB"};

var BasePopover = props => {
  var {
    children,
    className,
    nubbin,
    contentClassName
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className", "nubbin", "contentClassName"]);

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$h.popover, // TODO: Testcass - Anoop

    /* istanbul ignore next */
    nubbin && style$h.nubbin,
    /* istanbul ignore next */
    nubbin === "top" && style$h.top,
    /* istanbul ignore next */
    nubbin === "right" && style$h.right,
    /* istanbul ignore next */
    nubbin === "left" && style$h.left,
    /* istanbul ignore next */
    nubbin === "bottom" && style$h.bottom, className)
  }, rest), /*#__PURE__*/React.createElement("div", {
    className: classNames__default['default'](style$h.content, contentClassName)
  }, children));
};

// This file does not have 100% code coverage.
/**
 * Enables body scroll locking.
 *
 * @see {@link https://github.com/willmcpo/body-scroll-lock}
 * @see {@link https://github.com/gragland/usehooks/blob/master/src/pages/useLockBodyScroll.md}
 *
 * @example
 * const ref = useRef();
 *
 * useLockBodyScroll(ref)
 *
 * @param {React.RefObject} ref — Ref to manage scroll locking.
 * @returns {void}
 */

var useLockBodyScroll = ref => {
  React.useEffect(() => {
    var element = ref.current;
    /* istanbul ignore else */

    if (element) {
      bodyScrollLock.disableBodyScroll(element);
    }

    return () => {
      /* istanbul ignore if */
      if (!element) {
        /* istanbul ignore next */
        return;
      }

      bodyScrollLock.enableBodyScroll(element);
    };
  }, [ref]);
};

// This file does not have 100% code coverage.
/**
 * Trigger click event when clicking outside of a given ref.
 *
 * Original intention was to be placed on shim's or overlays (e.g. Modal).
 *
 * @see {@link https://github.com/gragland/usehooks/blob/master/src/pages/useOnClickOutside.md}
 *
 * @example
 * const ref1 = useRef();
 * const ref2 = useRef();
 *
 * useOnClickOutside(ref1);
 * useOnClickOutside([ref1, ref2]);
 *
 * @param {React.RefObject | React.RefObject[]} ref — Ref to manage outside click.
 * @param {Function} onClick — Click event handler.
 * @param {Object} options
 * @returns {void}
 */

var useOnClickOutside = (ref, onClick, options = {}) => {
  React.useEffect(() => {
    var listener = event => {
      var elementRef = Array.isArray(ref) ? ref : [ref];

      if (elementRef.some(ref => {
        var _ref$current;

        return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(event.target);
      })) {
        return;
      } // NOTE: Required to preserve focus return. We don't want to change
      // focus to the newly clicked element, but instead leverage the
      // focus trap's focus return.

      /* istanbul ignore next */


      if (!options.disablePreventDefault) {
        event.preventDefault();
      }

      onClick(event);
    };
    /* istanbul ignore if: JSDOM has open issue for PointerEvent, which is undefined and mocking window.PointerEvent doesn't work properly */
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition


    if (window.PointerEvent) {
      /* istanbul ignore next */
      document.addEventListener("pointerdown", listener);
    } else {
      document.addEventListener("mousedown", listener);
      document.addEventListener("touchstart", listener);
    }

    return () => {
      /* istanbul ignore if JSDOM has open issue for PointerEvent, which is undefined and mocking window.PointerEvent doesn't work properly */
      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
      if (window.PointerEvent) {
        /* istanbul ignore next */
        document.removeEventListener("pointerdown", listener);
      } else {
        document.removeEventListener("mousedown", listener);
        document.removeEventListener("touchstart", listener);
      }
    };
  }, [ref, onClick, options]);
};

/**
 * Trigger key down event.
 *
 * @param {string[]} keys Collection of `KeyboardEvent.key`s to filter
 * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key
 * @param {Function} onKeyDown Listener for filtered `keydown` events
 */

var useOnKeyDown = (keys, onKeyDown) => {
  React.useEffect(() => {
    var listener = event => {
      if (keys.includes(event.key) && typeof onKeyDown === "function") {
        onKeyDown(event);
      }
    };

    document.addEventListener("keydown", listener);
    return () => document.removeEventListener("keydown", listener);
  }, [keys, onKeyDown]);
};

var FocusGuard = props => {
  var {
    children,
    onGuard,
    autoFocus = true
  } = props,
      rest = _objectWithoutProperties(props, ["children", "onGuard", "autoFocus"]);

  var ref = React.useRef(null);
  React.useEffect(() => {
    var _ref$current;

    // Return if autofocus is disabled
    if (!autoFocus) {
      return;
    } // istanbul ignore next


    var focusableNodes = ((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.querySelectorAll( // @see {@link https://github.com/theKashey/focus-lock/blob/125a50bc53fdc2cbb7705327790ecff4f3289ba1/src/utils/tabbables.ts#L4-L24}
    "a[href], button:enabled, input:enabled:not([type=hidden]), select:enabled, textarea:enabled, [tabindex], [autofocus]")) || []; // NOTE: first and last node are focus guards, second node will be the first focusable item.

    setTimeout(() => focusableNodes[1].focus(), 0);
  }, []);
  return /*#__PURE__*/React.createElement("div", _extends({
    ref: ref
  }, rest), /*#__PURE__*/React.createElement("div", {
    tabIndex: 0,
    onFocus: onGuard
  }), /*#__PURE__*/React.createElement("div", {
    tabIndex: -1
  }), children, /*#__PURE__*/React.createElement("div", {
    tabIndex: 0,
    onFocus: onGuard
  }));
};

// This file does not have 100% code coverage.
/**
 * Create and attach element to the body to be used for portal.
 *
 * @see {@link https://www.jayfreestone.com/writing/react-portals-with-hooks}
 *
 * @returns {React.Ref} modal
 */

var usePortal = (options = {}) => {
  var {
    a11yHidden = true
  } = options;
  var modal = React.useRef(null);
  var container = document.body;

  if (!modal.current) {
    modal.current = document.createElement("div");
  } // istanbul ignore next


  React.useEffect(() => {
    // istanbul ignore next
    if (!a11yHidden) {
      return () => undefined;
    } // We need to add `aria-hidden` to all children of <body>,
    // except for the modal. We .filter() the list to find only
    // <div>-like elements, ignoring <script>, <style>, etc.
    // We also don't want to affect any elements that may already
    // have `aria-hidden` set to true.


    var bodyChildren = Array.from(container.children).filter(child => child.innerHTML && [null, "false"].includes(child.getAttribute("aria-hidden")));
    bodyChildren.forEach(el => el.setAttribute("aria-hidden", "true"));
    return () => {
      bodyChildren.forEach(el => el.removeAttribute("aria-hidden"));
    };
  }, []);
  React.useEffect(() => {
    container.appendChild(modal.current);
    return () => {
      // istanbul ignore next
      if (!modal.current) {
        return;
      } // NOTE: IE 11 needs removeChild


      container.removeChild(modal.current);
    };
  }, []);
  return modal;
};

var style$i = {"popover":"PopoverPortal-module_popover__2SfZz","arrow":"PopoverPortal-module_arrow__1K8gr","top":"PopoverPortal-module_top__2NdNV","bottom":"PopoverPortal-module_bottom__1y1w4","left":"PopoverPortal-module_left__28Dcl","right":"PopoverPortal-module_right__2ehDu","popperBase":"PopoverPortal-module_popperBase__z58Vu","show":"PopoverPortal-module_show__3sx2R"};

/**
 * Portals provide a way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 */

var Layer = /*#__PURE__*/React__default['default'].forwardRef((props, ref) => {
  var {
    children,
    mountNode: container,
    onMount,
    onUnmount,
    disablePortal
  } = props,
      rest = _objectWithoutProperties(props, ["children", "mountNode", "onMount", "onUnmount", "disablePortal"]);
  /* istanbul ignore next */


  React.useEffect(() => {
    onMount && onMount(container);
    return () => {
      onUnmount && onUnmount();
    };
  }, []);
  var content = /*#__PURE__*/React__default['default'].createElement("div", _extends({
    ref: ref
  }, rest), children);
  return disablePortal ? content : /*#__PURE__*/ReactDOM.createPortal(content, container);
});
Layer.defaultProps = {
  disablePortal: false
};

var FocusTrap = props => {
  var {
    hasFocusReturn = true
  } = props,
      rest = _objectWithoutProperties(props, ["hasFocusReturn"]); // Focus return conflicts with all UI announcements.
  //
  // @see {@link https://jira.walmart.com/browse/LD-607}
  //
  // 1. Focus return will stomp over aria-live. Screen reader can only read one thing at a time.
  // 2. Focus return is required for all modal-like components.
  // 3. Recommend manage all UI announcement within children or outside experience entirely.


  return /*#__PURE__*/React.createElement(FocusLock__default['default'], _extends({
    returnFocus: hasFocusReturn
  }, rest));
};

/**
 * A hook to force render a component.
 *
 * @returns {Function} — set value
 */

var useForceUpdate = () => {
  var [value, setValue] = React.useState(0);
  return () => setValue(value + 1);
};

var PopoverPortal = props => {
  var _applyCommonProps = applyCommonProps(props, PopoverPortal),
      {
    basePopoverProps = {},
    className,
    content,
    hasNubbin = false,
    onClose,
    popoverContainerRef,
    position = "bottom",
    triggerRef,
    isFixed = false,
    focusLock = false,
    margin = hasNubbin ? 12 : 4,
    skid = 0,
    overrides = {},
    popperOptions = {},
    autoFocus = true,
    disableCloseOnClickOutside = false,
    disableCloseOnEsc = false,
    disablePopoverFlip = false,
    mountNodeRef,
    disablePortal = false,
    onMouseEnter = () => {},
    onMouseLeave = () => {}
  } = _applyCommonProps,
      rest = _objectWithoutProperties(_applyCommonProps, ["basePopoverProps", "className", "content", "hasNubbin", "onClose", "popoverContainerRef", "position", "triggerRef", "isFixed", "focusLock", "margin", "skid", "overrides", "popperOptions", "autoFocus", "disableCloseOnClickOutside", "disableCloseOnEsc", "disablePopoverFlip", "mountNodeRef", "disablePortal", "onMouseEnter", "onMouseLeave"]);

  var popoverRef = React.useRef(null);
  var popoverMountRef = !disablePortal ? mountNodeRef || usePortal({
    a11yHidden: false
  }) : React.useRef();
  var arrowRef = React.useRef(null);
  var anchorRef = triggerRef.current ? triggerRef :
  /* istanbul ignore next */
  popoverContainerRef; // Prevents overflow

  var customTetherOffset = React.useCallback(({
    popper,
    placement
  }) => {
    if (String(placement).includes("right") || String(placement).includes("left")) {
      return popper.height;
    }

    return 0;
  }, []); // Offset modifier to modifiy popper skidding flip usecase

  var customPopperOffset = React.useCallback(({
    placement
  }) => {
    var [, align] = placement.split("-");

    if (align === "start") {
      return [-Math.abs(Number(skid)), margin];
    } else if (align === "end") {
      return [Math.abs(Number(skid)), margin];
    } else {
      return [skid, margin];
    }
  }, [skid, margin]);
  var defaultPopperOptions = {
    modifiers: [{
      name: "offset",
      options: {
        offset: customPopperOffset
      }
    }, {
      name: "arrow",
      options: {
        element: arrowRef.current
      }
    }, {
      name: "preventOverflow",
      options: {
        tetherOffset: customTetherOffset
      }
    }, {
      name: "flip",
      enabled: !disablePopoverFlip
    }]
  };
  var {
    styles,
    attributes,
    state: popperState,
    update: popoverUpdate
  } = reactPopper.usePopper(anchorRef.current, popoverRef.current, _objectSpread2(_objectSpread2({
    strategy: isFixed ? "fixed" : "absolute",
    placement: position
  }, popperOptions), {}, {
    modifiers: [...defaultPopperOptions.modifiers, ...(popperOptions.modifiers || [])]
  }));
  var forceUpdate = useForceUpdate();

  var isPopperPositioned = () => !!popperState;

  var onCloseWithFocusReturn = event => {
    (anchorRef === null || anchorRef === void 0 ? void 0 : anchorRef.current).focus();
    onClose(event);
  };

  var onDocumentClick = evt => {
    if (disableCloseOnClickOutside) {
      return;
    }

    onClose && onClose(evt);
  };

  var onEsc = event => {
    if (disableCloseOnEsc) {
      return;
    }

    onCloseWithFocusReturn(event);
  }; // TODO: Find better way to handle click outside, possibly event delegation


  useOnClickOutside([anchorRef, popoverRef], onDocumentClick, {
    disablePreventDefault: true
  });
  useOnKeyDown(["Esc", "Escape"], onEsc);
  /*
   * Forcing popover/component to re-render is updating postion of popper
   * https://popper.js.org/docs/v2/modifiers/event-listeners/
   */

  React.useEffect(() => {
    forceUpdate();
    popoverUpdate && popoverUpdate();
  }, [content, anchorRef === null || anchorRef === void 0 ? void 0 : anchorRef.current, popoverMountRef === null || popoverMountRef === void 0 ? void 0 : popoverMountRef.current, hasNubbin]);
  React.useEffect(() => {
    /* istanbul ignore else */
    if (!isPopperPositioned()) {
      var _popoverRef$current;

      forceUpdate();
      (_popoverRef$current = popoverRef.current) === null || _popoverRef$current === void 0 ? void 0 : _popoverRef$current.style.removeProperty("visibility");
    }
  }, []);
  var close = React.useCallback(evt => {
    onClose && onClose(evt);
  }, [onClose]);

  var renderContentWithFocusLock = renderContent => {
    if (focusLock) {
      /*
       ** Using react-focus-lock to trap the focus inside popover
       ** popover wont close on tab be in loop
       */
      return /*#__PURE__*/React.createElement(FocusTrap, {
        hasFocusReturn: false,
        autoFocus: isPopperPositioned() && autoFocus // autofocus after popper positioned
        ,
        noFocusGuards: false
      }, renderContent);
    } else {
      /*
       ** Popover closes when no more focusable elements on tab
       */
      return /*#__PURE__*/React.createElement(FocusGuard, {
        autoFocus: autoFocus,
        onGuard: onCloseWithFocusReturn
      }, renderContent);
    }
  };

  var getArrowClassFromPositon = placement => {
    var [basePosition] = (placement ||
    /* istanbul ignore next */
    "").split("-");
    return style$i[basePosition];
  };

  var renderInnerContent = () => {
    return /*#__PURE__*/React.createElement(BasePopover, _extends({}, basePopoverProps, {
      className: classNames__default['default'](style$i.popperBase, basePopoverProps === null || basePopoverProps === void 0 ? void 0 : basePopoverProps.className),
      contentClassName: classNames__default['default'](overrides.content)
    }), typeof content === "function" ? content({
      close
    }) : content);
  };

  var renderArrowContent = () => {
    var _attributes$popper;

    return /*#__PURE__*/React.createElement("div", {
      ref: arrowRef,
      style: styles.arrow,
      className: classNames__default['default'](isPopperPositioned() ? style$i.show : null, isPopperPositioned() && getArrowClassFromPositon((_attributes$popper = attributes.popper) === null || _attributes$popper === void 0 ? void 0 : _attributes$popper["data-popper-placement"]), style$i.arrow, overrides.arrow)
    });
  };

  return /*#__PURE__*/React.createElement(Layer, {
    disablePortal: disablePortal,
    mountNode: popoverMountRef === null || popoverMountRef === void 0 ? void 0 : popoverMountRef.current
  }, /*#__PURE__*/React.createElement("div", _extends({}, rest, {
    style: _objectSpread2({
      visibility: "hidden"
    }, styles.popper)
  }, attributes.popper, {
    ref: popoverRef,
    className: classNames__default['default'](style$i.popover, overrides.base, className),
    onMouseLeave: onMouseLeave,
    onMouseEnter: onMouseEnter
  }), hasNubbin && renderArrowContent(), renderContentWithFocusLock(renderInnerContent())));
};

var style$j = {"popoverContainer":"Popover-module_popoverContainer__2JyDf"};

var Popover = props => {
  var {
    children,
    isOpen,
    containerClassName
  } = props,
      rest = _objectWithoutProperties(props, ["children", "isOpen", "containerClassName"]);

  var popoverContainerRef = React.useRef(null);
  var triggerRef = React.useRef();
  var child = React.Children.only(children);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("span", {
    className: classNames__default['default'](containerClassName, style$j.popoverContainer),
    ref: popoverContainerRef
  }, /*#__PURE__*/React.cloneElement(child, {
    "aria-expanded": isOpen,
    "aria-haspopup": true,
    ref: node => {
      var {
        ref
      } = child; // @see {@link https://github.com/facebook/react/issues/8873#issuecomment-489579878}

      if (typeof ref === "function") {
        ref(node);
      } else if (ref != null) {
        ref.current = node;
      }

      triggerRef.current = node;
    }
  })), isOpen && /*#__PURE__*/React.createElement(PopoverPortal, _extends({}, rest, {
    popoverContainerRef: popoverContainerRef,
    triggerRef: triggerRef
  })));
};

var style$k = {"popoverContainer":"StatefullPopover-module_popoverContainer__2sG60"};

var StatefullPopover = props => {
  var {
    children,
    hideDelay = 200,
    showDelay = 0,
    onMouseEnter = () => {},
    onMouseLeave = () => {},
    trigger = "click",
    onClose = () => {},
    onOpen = () => {},
    isOpen,
    inititalState,
    containerClassName = ""
  } = props,
      rest = _objectWithoutProperties(props, ["children", "hideDelay", "showDelay", "onMouseEnter", "onMouseLeave", "trigger", "onClose", "onOpen", "isOpen", "inititalState", "containerClassName"]);

  var popoverContainerRef = React.useRef(null);
  var triggerRef = React.useRef();
  var child = React.Children.only(children);
  var isControlled = isOpen !== undefined;
  var [statefullOpen, setStatefefullOpen] = React.useState(inititalState);
  var hideTimer = React.useRef();
  var showTimer = React.useRef();

  var handleClose = evt => {
    statefullOpen && onClose(evt);

    if (!isControlled) {
      setStatefefullOpen(false);
    }
  };

  var handleOpen = evt => {
    !statefullOpen && onOpen(evt);

    if (!isControlled) {
      setStatefefullOpen(true);
    }
  };

  var isPopoverHover = () => {
    return trigger === "hover";
  };

  var clearTimers = () => {
    [hideTimer.current, showTimer.current].forEach(timer => {
      if (timer) {
        clearTimeout(timer);
      }
    });
  };

  var handleAnchorMouseEnter = evt => {
    if (hideTimer.current) {
      clearTimeout(hideTimer.current);
    }

    showTimer.current = setTimeout(() => {
      handleOpen(evt);
    }, showDelay);
  };

  var handlePopoverMouseEnter = () => {
    if (hideTimer.current) {
      clearTimeout(hideTimer.current);
    }
  };

  var handleAnchorMouseLeave = evt => {
    /* istanbul ignore else */
    if (showTimer.current) {
      clearTimeout(showTimer.current);
    }

    hideTimer.current = setTimeout(() => {
      handleClose(evt);
    }, hideDelay);
  };

  var handlePopoverMouseLeave = evt => {
    /* istanbul ignore else */
    if (showTimer.current) {
      clearTimeout(showTimer.current);
    }

    hideTimer.current = setTimeout(() => {
      handleClose(evt);
    }, hideDelay);
  };

  var handleAnchorClick = evt => {
    if (statefullOpen) {
      handleClose(evt);
    } else {
      handleOpen(evt);
    }
  };

  var getContainerEventHandlers = () => {
    if (isPopoverHover()) {
      return {
        onMouseEnter: evt => {
          handleAnchorMouseEnter(evt);
        },
        onMouseLeave: evt => {
          handleAnchorMouseLeave(evt);
        }
      };
    } else {
      return {
        onClick: evt => {
          handleAnchorClick(evt);
        }
      };
    }
  };

  React.useEffect(() => {
    return () => {
      clearTimers();
    };
  }, []);
  React.useEffect(() => {
    if (!isControlled) {
      return;
    }

    setStatefefullOpen(isOpen);
  }, [isOpen]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("span", _extends({
    className: classNames__default['default'](style$k.popoverContainer, containerClassName),
    ref: popoverContainerRef
  }, getContainerEventHandlers()), /*#__PURE__*/React.cloneElement(child, {
    "aria-expanded": statefullOpen,
    "aria-haspopup": true,
    ref: node => {
      var {
        ref
      } = child; // @see {@link https://github.com/facebook/react/issues/8873#issuecomment-489579878}

      if (typeof ref === "function") {
        ref(node);
      } else if (ref != null) {
        ref.current = node;
      }

      triggerRef.current = node;
    }
  })), statefullOpen && /*#__PURE__*/React.createElement(PopoverPortal, _extends({}, rest, {
    popoverContainerRef: popoverContainerRef,
    triggerRef: triggerRef,
    onMouseEnter: evt => {
      /* istanbul ignore else */
      if (isPopoverHover()) {
        handlePopoverMouseEnter();
      }

      onMouseEnter(evt);
    },
    onMouseLeave: evt => {
      /* istanbul ignore else */
      if (isPopoverHover()) {
        handlePopoverMouseLeave(evt);
      }

      onMouseLeave(evt);
    },
    onClose: evt => {
      handleClose(evt);
    }
  })));
};

var style$l = {"arrow":"Tooltip-module_arrow__U8b1W","content":"Tooltip-module_content__1o-a7","base":"Tooltip-module_base__WENNv"};

var Tooltip = props => {
  var {
    overrides = {},
    trigger = "hover",
    hasNubbin = true,
    position = "auto",
    autoFocus = false
  } = props,
      rest = _objectWithoutProperties(props, ["overrides", "trigger", "hasNubbin", "position", "autoFocus"]);

  var tooltipOverrides = {
    arrow: [style$l.arrow, overrides.arrow],
    base: [style$l.base, overrides.base],
    content: [style$l.content, overrides.content]
  };
  return /*#__PURE__*/React__default['default'].createElement(StatefullPopover, _extends({
    overrides: tooltipOverrides,
    trigger: trigger,
    hasNubbin: hasNubbin,
    position: position,
    autoFocus: autoFocus
  }, rest));
};

var style$m = {"tableContainer":"Options-module_tableContainer__2RINL","header":"Options-module_header__ur4rj","row":"Options-module_row__33tDy","cell":"Options-module_cell__2C68Z","headerSelected":"Options-module_headerSelected__1Maor","headRow":"Options-module_headRow__1vhRf","headRowSelected":"Options-module_headRowSelected__1Su3G","headRowSelectable":"Options-module_headRowSelectable__2zAge","headCell":"Options-module_headCell__1_Omr","bodyContainer":"Options-module_bodyContainer__bQYPN","rowWithoutHeader":"Options-module_rowWithoutHeader__2xC7k","rowSelected":"Options-module_rowSelected__2OHs6","downArrow":"Options-module_downArrow__2zWjW","upArrow":"Options-module_upArrow__1iJBG"};

var Options = props => {
  var {
    options,
    columns,
    getOptionProps,
    showColumnHeader,
    isHeaderSelectable,
    isHeaderSelected,
    disableOptionsSort,
    onHeaderClick
  } = props;
  var {
    getTableProps,
    getTableBodyProps,
    headerGroups,
    rows,
    prepareRow
  } = reactTable.useTable({
    columns,
    data: options,
    disableSortBy: disableOptionsSort
  }, reactTable.useSortBy);

  var toggleHeaderSelection = () => {
    if (!isHeaderSelectable || !onHeaderClick) return;
    onHeaderClick(!isHeaderSelected);
  };

  var SortIcon = ({
    isSorted,
    isSortedDesc
  }) => {
    if (!isSorted) return null;
    return isSortedDesc ? /*#__PURE__*/React.createElement(WrappedIcon, {
      className: classNames__default['default'](style$m.downArrow)
    }) : /*#__PURE__*/React.createElement(WrappedIcon, {
      className: classNames__default['default'](style$m.upArrow)
    });
  };

  return /*#__PURE__*/React.createElement("table", _extends({
    className: classNames__default['default'](style$m.tableContainer)
  }, getTableProps()), showColumnHeader && /*#__PURE__*/React.createElement("thead", {
    className: classNames__default['default'](isHeaderSelectable && style$m.header, isHeaderSelectable && isHeaderSelected && style$m.headerSelected)
  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement("tr", _extends({
    onClick: toggleHeaderSelection,
    className: classNames__default['default'](style$m.headRow, isHeaderSelectable && style$m.headRowSelectable, isHeaderSelectable && isHeaderSelected && style$m.headRowSelected)
  }, headerGroup.getHeaderGroupProps()), headerGroup.headers.map(column => /*#__PURE__*/React.createElement("th", _extends({
    className: classNames__default['default'](style$m.headCell)
  }, column.getHeaderProps(column.getSortByToggleProps())), column.render("Header"), /*#__PURE__*/React.createElement(SortIcon, column)))))), /*#__PURE__*/React.createElement("tbody", _extends({}, getTableBodyProps(), {
    className: classNames__default['default'](style$m.bodyContainer)
  }), rows.map(row => {
    prepareRow(row);
    var {
      onClick,
      isOptionSelected
    } = getOptionProps(row.original);
    return /*#__PURE__*/React.createElement("tr", _extends({}, row.getRowProps(), {
      className: classNames__default['default'](style$m.row, isOptionSelected && style$m.rowSelected),
      onClick: onClick
    }), row.cells.map(cell => {
      return /*#__PURE__*/React.createElement("td", _extends({}, cell.getCellProps(), {
        className: classNames__default['default'](style$m.cell)
      }), cell.render("Cell"));
    }));
  })));
};
Options.displayName = "Options";

var useSelect = props => {
  var {
    options,
    selectedOptions,
    onChange,
    keyAccessor,
    onClose,
    isMultiSelect,
    shouldCloseOnChange
  } = props;
  var selectedList = Array.isArray(selectedOptions) ? selectedOptions : selectedOptions ? [selectedOptions] : [];

  var isEqualOptions = (opt1, opt2) => {
    if (typeof opt1 !== "object" || typeof opt2 !== "object") return opt1 === opt2;
    return !!opt1 && !!opt2 && opt1[keyAccessor] === opt2[keyAccessor];
  };

  var checkOptionSelected = option => {
    return selectedList.findIndex(opt => {
      return isEqualOptions(opt, option);
    }) !== -1;
  };

  var getMultiSelectChange = (option, previouslyOptionSelected) => {
    if (!Array.isArray(selectedOptions)) return previouslyOptionSelected ? [] : [option];
    if (!previouslyOptionSelected) return [...selectedOptions, option];
    return selectedOptions.filter(opt => {
      return !isEqualOptions(opt, option);
    });
  };

  var getSingleSelectChange = (option, previouslyOptionSelected) => {
    if (!Array.isArray(selectedOptions)) return previouslyOptionSelected ? null : option;
    return previouslyOptionSelected ? [] : [option];
  };

  var getNewSelectedOptions = (option, previouslyOptionSelected) => {
    return isMultiSelect ? getMultiSelectChange(option, previouslyOptionSelected) : getSingleSelectChange(option, previouslyOptionSelected);
  };

  var onOptionClick = option => {
    var previouslyOptionSelected = checkOptionSelected(option);
    var newSelectedOptions = getNewSelectedOptions(option, previouslyOptionSelected);
    onChange(newSelectedOptions);
    if (shouldCloseOnChange && onClose) onClose();
  };

  var getOptionProps = augmentedOption => {
    var option = _objectWithoutProperties(augmentedOption, ["isOptionSelected"]);

    var {
      realValue
    } = option;
    return {
      onClick: () => onOptionClick(realValue || option),
      isOptionSelected: checkOptionSelected(realValue || option)
    };
  };

  var augmentOptions = opts => {
    if (!Array.isArray(opts)) return [];
    return opts.map(opt => {
      if (typeof opt !== "object") {
        opt = {
          label: opt,
          realValue: opt
        };
      }

      var {
        realValue
      } = opt;
      return _objectSpread2(_objectSpread2({}, opt), {}, {
        isOptionSelected: checkOptionSelected(realValue || opt)
      });
    });
  };

  var getTypeofOptions = options => {
    if (!Array.isArray(options)) return "string";
    var [firstOption] = options;
    return typeof firstOption;
  };

  return {
    getOptionProps,
    augmentedOptions: augmentOptions(options),
    optionType: getTypeofOptions(options)
  };
};

var defaultColumnsProp = [{
  Header: "Labels",
  accessor: "label"
}];

var style$n = {"container":"Search-module_container__3oq8O","input":"Search-module_input__gQvrH","search":"Search-module_search__2vFYD"};

var Search = props => {
  var {
    searchValue = "",
    onSearchFilterChange = () => {},
    searchPlaceholder = "|",
    className = "",
    searchInputClassName = ""
  } = props;
  return /*#__PURE__*/React.createElement("div", {
    className: classNames__default['default'](style$n.container, className)
  }, /*#__PURE__*/React.createElement("input", {
    className: classNames__default['default'](style$n.input, searchInputClassName),
    value: searchValue,
    placeholder: searchPlaceholder,
    onChange: e => onSearchFilterChange(e.target.value)
  }), /*#__PURE__*/React.createElement(WrappedIcon$d, {
    size: "medium",
    className: classNames__default['default'](style$n.search)
  }));
};
Search.displayName = "Search";

var Dropdown = props => {
  var {
    children,
    options,
    onChange,
    className,
    optionsContainerStyle,
    selectedOptions,
    isOpen,
    columns = defaultColumnsProp,
    onClose = () => {},
    keyAccessor = "label",
    isMultiSelect = false,
    showColumnHeader = false,
    isHeaderSelectable = false,
    isHeaderSelected = false,
    onHeaderClick = () => {},
    disableOptionsSort = true,
    showSearchFilter = false,
    shouldCloseOnChange = true,
    showActions = false,
    onSaveChanges = () => {},
    searchInputProps = {},
    popoverProps = {}
  } = props,
      rest = _objectWithoutProperties(props, ["children", "options", "onChange", "className", "optionsContainerStyle", "selectedOptions", "isOpen", "columns", "onClose", "keyAccessor", "isMultiSelect", "showColumnHeader", "isHeaderSelectable", "isHeaderSelected", "onHeaderClick", "disableOptionsSort", "showSearchFilter", "shouldCloseOnChange", "showActions", "onSaveChanges", "searchInputProps", "popoverProps"]);

  var {
    getOptionProps,
    augmentedOptions
  } = useSelect({
    options,
    selectedOptions,
    onChange,
    keyAccessor,
    isMultiSelect,
    shouldCloseOnChange,
    onClose
  });
  var basePopoverProps = {
    className: classNames__default['default'](style$g.innerPopoverContainer)
  };

  var SelectedTick = ({
    isSelected
  }) => {
    return isSelected ? /*#__PURE__*/React.createElement(WrappedIcon$3, {
      size: "small",
      a11yLabel: "option selected",
      className: classNames__default['default'](style$g.selectIcon)
    }) : /*#__PURE__*/React.createElement("div", {
      className: classNames__default['default'](style$g.emptyTick)
    });
  };

  var CheckBox = ({
    isSelected
  }) => {
    return /*#__PURE__*/React.createElement(Checkbox, {
      a11yLabelledBy: "options selected",
      checked: isSelected,
      onChange: () => {}
    });
  };

  var HeaderSelectColumn = () => {
    if (!isHeaderSelectable) return "";
    return isMultiSelect ? /*#__PURE__*/React.createElement(CheckBox, {
      isSelected: isHeaderSelected
    }) : /*#__PURE__*/React.createElement(SelectedTick, {
      isSelected: isHeaderSelected
    });
  };

  var addCheckColumn = col => {
    var selectedColumn = {
      Header: HeaderSelectColumn,
      disableSortBy: true,
      accessor: "isOptionSelected",
      Cell: ({
        row
      }) => {
        var _row$values;

        var isSelected = row === null || row === void 0 ? void 0 : (_row$values = row.values) === null || _row$values === void 0 ? void 0 : _row$values.isOptionSelected;
        return isMultiSelect ? /*#__PURE__*/React.createElement(CheckBox, {
          isSelected: isSelected
        }) : /*#__PURE__*/React.createElement(SelectedTick, {
          isSelected: isSelected
        });
      }
    };
    return isMultiSelect ? [selectedColumn, ...col] : [...col, selectedColumn];
  };

  var renderPopoverContent = () => {
    return /*#__PURE__*/React.createElement("div", _extends({
      className: classNames__default['default'](style$g.dropdownContainer, className)
    }, rest), showSearchFilter && /*#__PURE__*/React.createElement(Search, searchInputProps), /*#__PURE__*/React.createElement("div", {
      className: classNames__default['default'](style$g.options, optionsContainerStyle)
    }, /*#__PURE__*/React.createElement(Options, {
      getOptionProps: getOptionProps,
      options: augmentedOptions,
      columns: addCheckColumn(columns),
      showColumnHeader: showColumnHeader,
      isHeaderSelectable: isHeaderSelectable,
      isHeaderSelected: isHeaderSelected,
      onHeaderClick: onHeaderClick,
      disableOptionsSort: disableOptionsSort
    })), showActions && /*#__PURE__*/React.createElement("div", {
      className: classNames__default['default'](style$g.actionModals)
    }, /*#__PURE__*/React.createElement(Button, {
      size: "medium",
      variant: "tertiary",
      onClick: onClose
    }, "Cancel"), /*#__PURE__*/React.createElement(Button, {
      size: "medium",
      variant: "primary",
      onClick: onSaveChanges
    }, "Save Changes")));
  };

  return /*#__PURE__*/React.createElement(Popover, _extends({
    content: renderPopoverContent(),
    basePopoverProps: basePopoverProps,
    className: classNames__default['default'](style$g.popoverContainer),
    isOpen: isOpen,
    onClose: onClose,
    overrides: {
      content: classNames__default['default'](style$g.contentStyle)
    }
  }, popoverProps), children);
};
Dropdown.displayName = "Dropdown";

var style$o = {"flag":"Flag-module_flag__vSsF6","blue":"Flag-module_blue__2fVac","filled":"Flag-module_filled__3q_aH","outlined":"Flag-module_outlined__3IPAk","red":"Flag-module_red__3F0cG"};

var Flag = props => {
  var {
    children,
    className,
    color = "blue",
    variant = "outlined"
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className", "color", "variant"]);

  return /*#__PURE__*/React.createElement("span", _extends({
    className: classNames__default['default'](style$o.flag, color === "blue" && style$o.blue, color === "red" && style$o.red, variant === "outlined" && style$o.outlined, variant === "filled" && style$o.filled, className)
  }, rest), children);
};

var style$p = {"error":"FormControlError-module_error__2iKu9","icon":"FormControlError-module_icon__3yycS"};

var FormControlError = props => {
  var {
    children,
    className
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className"]);

  return /*#__PURE__*/React__default['default'].createElement("span", _extends({
    className: classNames__default['default'](style$p.error, className)
  }, rest), children, /*#__PURE__*/React__default['default'].createElement(WrappedIcon$b, {
    className: style$p.icon
  }));
};

var style$q = {"helperText":"FormControlHelperText-module_helperText__x0qSi"};

var FormControlHelperText = props => {
  var {
    className
  } = props,
      rest = _objectWithoutProperties(props, ["className"]);

  return /*#__PURE__*/React__default['default'].createElement("span", _extends({
    className: classNames__default['default'](style$q.helperText, className)
  }, rest));
};

var style$r = {"label":"FormControlLabel-module_label__3vwKX","text":"FormControlLabel-module_text__1dq2v","isEmpty":"FormControlLabel-module_isEmpty__3NK0v","isFocused":"FormControlLabel-module_isFocused__nvw0E","isDisabled":"FormControlLabel-module_isDisabled__3DCNg"};

/* eslint-disable jsx-a11y/label-has-associated-control */
var FormControlLabel = props => {
  var {
    children,
    className,
    disabled = false,
    isEmpty = false,
    isFocused = false
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className", "disabled", "isEmpty", "isFocused"]);

  return /*#__PURE__*/React__default['default'].createElement("label", _extends({
    className: classNames__default['default'](style$r.label, disabled && style$r.isDisabled, isEmpty && style$r.isEmpty, isFocused && style$r.isFocused, className)
  }, rest), /*#__PURE__*/React__default['default'].createElement("span", {
    className: style$r.text
  }, children));
};

var style$s = {"formGroup":"FormGroup-module_formGroup__1oxcB","formGroupLabel":"FormGroup-module_formGroupLabel__3Mxa6","formGroupRow":"FormGroup-module_formGroupRow__14hKy","helperText":"FormGroup-module_helperText__Nw6yH","label":"FormGroup-module_label__IqZzs"};

var FormGroup = props => {
  var {
    children,
    className,
    error,
    helperText,
    label
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className", "error", "helperText", "label"]);

  var content = React.Children.map(children, child => /*#__PURE__*/React.createElement("div", {
    className: style$s.formGroupRow
  }, child));
  var helperElement = (error || helperText) && /*#__PURE__*/React.createElement(FormControlHelperText, {
    className: style$s.helperText
  }, error && /*#__PURE__*/React.createElement(FormControlError, null, error), !error && /*#__PURE__*/React.createElement("span", null, helperText));
  return /*#__PURE__*/React.createElement("fieldset", _extends({
    className: classNames__default['default'](style$s.formGroup, className)
  }, rest), (error || helperText || label) && /*#__PURE__*/React.createElement("legend", {
    className: style$s.formGroupLabel
  }, label && /*#__PURE__*/React.createElement("span", {
    className: style$s.label
  }, label), helperElement), content);
};
FormGroup.displayName = "FormGroup";

var style$t = {"grid":"Grid-module_grid__vIqaF","gutter":"Grid-module_gutter__1LwFV"};

var Grid = props => {
  var _applyCommonProps = applyCommonProps(props, Grid, true),
      {
    children,
    className,
    hasGutter = false
  } = _applyCommonProps,
      rest = _objectWithoutProperties(_applyCommonProps, ["children", "className", "hasGutter"]);

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$t.grid, hasGutter && style$t.gutter, className)
  }, rest), React.Children.map(children, child => {
    return /*#__PURE__*/React.cloneElement(child, {
      hasGutter
    });
  }));
};

var style$u = {"gridColumn":"GridColumn-module_gridColumn__1jQ2a","small1":"GridColumn-module_small1__3CqNZ","small2":"GridColumn-module_small2__p4VCP","small3":"GridColumn-module_small3__3uXUJ","small4":"GridColumn-module_small4__QVgul","small5":"GridColumn-module_small5__FT_QJ","small6":"GridColumn-module_small6__373zs","small7":"GridColumn-module_small7__35CtT","small8":"GridColumn-module_small8___5xL4","small9":"GridColumn-module_small9__CPy_9","small10":"GridColumn-module_small10__5rIQY","small11":"GridColumn-module_small11__1Rsdq","small12":"GridColumn-module_small12__dZLYL","medium1":"GridColumn-module_medium1__1B-Cl","medium2":"GridColumn-module_medium2__g5Csv","medium3":"GridColumn-module_medium3__ffbiT","medium4":"GridColumn-module_medium4__1CsNJ","medium5":"GridColumn-module_medium5__1L72G","medium6":"GridColumn-module_medium6__to5be","medium7":"GridColumn-module_medium7__3Bdq7","medium8":"GridColumn-module_medium8__14z7e","medium9":"GridColumn-module_medium9__3yeps","medium10":"GridColumn-module_medium10__dXKqw","medium11":"GridColumn-module_medium11__Q-3nD","medium12":"GridColumn-module_medium12__3wWiB","large1":"GridColumn-module_large1__Icenk","large2":"GridColumn-module_large2__2ksfT","large3":"GridColumn-module_large3__1Cyfa","large4":"GridColumn-module_large4__2Yh8G","large5":"GridColumn-module_large5__1pJZq","large6":"GridColumn-module_large6__1vSCm","large7":"GridColumn-module_large7__2zL0t","large8":"GridColumn-module_large8__3MSmA","large9":"GridColumn-module_large9__k4Nta","large10":"GridColumn-module_large10__3yFvb","large11":"GridColumn-module_large11__3V_ai","large12":"GridColumn-module_large12__14JfF","xlarge1":"GridColumn-module_xlarge1__3A7W4","xlarge2":"GridColumn-module_xlarge2__1lMPM","xlarge3":"GridColumn-module_xlarge3__2a1BO","xlarge4":"GridColumn-module_xlarge4__2O8Iq","xlarge5":"GridColumn-module_xlarge5__wLUsh","xlarge6":"GridColumn-module_xlarge6__1PcHB","xlarge7":"GridColumn-module_xlarge7__3MsAA","xlarge8":"GridColumn-module_xlarge8__S2-r4","xlarge9":"GridColumn-module_xlarge9__3Dj9S","xlarge10":"GridColumn-module_xlarge10__3R8pn","xlarge11":"GridColumn-module_xlarge11__1UqXn","xlarge12":"GridColumn-module_xlarge12__3vcYf","xxlarge1":"GridColumn-module_xxlarge1__20dTf","xxlarge2":"GridColumn-module_xxlarge2__2xwMW","xxlarge3":"GridColumn-module_xxlarge3__2q5uP","xxlarge4":"GridColumn-module_xxlarge4__3Ygj5","xxlarge5":"GridColumn-module_xxlarge5__3uwFv","xxlarge6":"GridColumn-module_xxlarge6__z3ylm","xxlarge7":"GridColumn-module_xxlarge7__2NsEM","xxlarge8":"GridColumn-module_xxlarge8__1tieF","xxlarge9":"GridColumn-module_xxlarge9__19dzQ","xxlarge10":"GridColumn-module_xxlarge10__6Ndwe","xxlarge11":"GridColumn-module_xxlarge11__1p0I7","xxlarge12":"GridColumn-module_xxlarge12__3vHDm","gutter":"GridColumn-module_gutter__2pooF"};

var GridColumn = props => {
  var _applyCommonProps = applyCommonProps(props, GridColumn, true),
      {
    children,
    className,
    hasGutter = false,
    lg,
    md,
    sm = 12,
    xl,
    xxl
  } = _applyCommonProps,
      rest = _objectWithoutProperties(_applyCommonProps, ["children", "className", "hasGutter", "lg", "md", "sm", "xl", "xxl"]);

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$u.gridColumn, hasGutter && style$u.gutter, style$u["small".concat(sm)], md && style$u["medium".concat(md)], lg && style$u["large".concat(lg)], xl && style$u["xlarge".concat(xl)], xxl && style$u["xxlarge".concat(xxl)], className)
  }, rest), children);
};

var styles = {"lineClamp":"LineClamp-module_lineClamp__3BJEC"};

var webkitLineClamp = Promise.resolve().then(function () { return /*#__PURE__*/_interopNamespace(require('webkit-line-clamp')); });
/*
  We used to calculate this dynamically for whatever text style happened to be present.
  But since it's always BogleWeb, we've hardcoded it.
*/

var BOGLE_BASELINE_RATIO = 0.21739130434782605;

var getRelativeLineHeight = node => {
  var style = window.getComputedStyle(node);
  return parseFloat(style.lineHeight) / parseFloat(style.fontSize);
};

var LineClamp = props => {
  var {
    className,
    lines = 2
  } = props,
      rest = _objectWithoutProperties(props, ["className", "lines"]);

  var ref = /*#__PURE__*/React.createRef();
  var [descenderPadding, setDescenderPadding] = React.useState(0);
  React.useEffect(() => {
    var span = document.createElement("span"); // test for support before pulling in polyfill

    /* istanbul ignore else: branch coverage fix */

    if (typeof span.style.webkitLineClamp !== "undefined") {
      return;
    }
    /* istanbul ignore next: ignore browser specific case */


    webkitLineClamp.then(({
      webkitLineClamp: lineClamp
    }) => {
      lineClamp(ref.current, lines);
    });
  });
  React.useEffect(() => {
    /* istanbul ignore if: branch coverage fix */
    if (!ref.current) {
      /* istanbul ignore next */
      return;
    }

    var lineHeight = getRelativeLineHeight(ref.current);
    setDescenderPadding(Math.max(0, 1 - lineHeight + BOGLE_BASELINE_RATIO) / 2);
  }, [ref]);
  return /*#__PURE__*/React.createElement("span", _extends({
    className: classNames__default['default'](className, styles.lineClamp),
    ref: ref // eslint-disable-next-line react/forbid-dom-props
    ,
    style: {
      WebkitLineClamp: lines,
      paddingBottom: "".concat(descenderPadding, "em"),
      marginBottom: "-".concat(descenderPadding, "em")
    }
  }, rest));
};

var style$v = {"container":"ModalPortal-module_container__1W6HO","modal":"ModalPortal-module_modal__2aLpT","small":"ModalPortal-module_small__3uLoc","medium":"ModalPortal-module_medium__tvssn","large":"ModalPortal-module_large__2WR5X","xlarge":"ModalPortal-module_xlarge__2e6EG","header":"ModalPortal-module_header__uO799","title":"ModalPortal-module_title__2NEho","closeButton":"ModalPortal-module_closeButton__Ob65w","content":"ModalPortal-module_content__1BYgH","contentInner":"ModalPortal-module_contentInner__osyV6","actions":"ModalPortal-module_actions__ocaFX"};

var style$w = {"container":"Overlay-module_container__3KCWS","trap":"Overlay-module_trap__19rNl"};

var Overlay = props => {
  var {
    children,
    className
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className"]);

  var overlay = usePortal();
  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$w.container, className)
  }, rest), /*#__PURE__*/React.createElement(FocusTrap, {
    className: style$w.trap
  }, children)), overlay.current);
};

var style$x = {"closeButton":"OverlayCloseButton-module_closeButton__1inP6"};

var OverlayCloseButton = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    children,
    className
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className"]);

  return /*#__PURE__*/React.createElement("button", _extends({
    className: classNames__default['default'](style$x.closeButton, className),
    ref: ref,
    type: "button"
  }, rest), /*#__PURE__*/React.createElement(WrappedIcon$8, {
    size: "medium"
  }));
});
OverlayCloseButton.displayName = "OverlayCloseButton";

var style$y = {"scrim":"OverlayScrim-module_scrim__3Bkfh"};

var OverlayScrim = props => {
  var {
    className
  } = props,
      rest = _objectWithoutProperties(props, ["className"]);

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$y.scrim, className)
  }, rest));
};

var ModalPortal = props => {
  var _applyCommonProps = applyCommonProps(props, ModalPortal, true),
      {
    actions,
    children,
    closeButtonProps,
    onClose,
    size = "small",
    title
  } = _applyCommonProps,
      rest = _objectWithoutProperties(_applyCommonProps, ["actions", "children", "closeButtonProps", "onClose", "size", "title"]);

  invariant(!!title, "Required property `title` not provided.");
  var modalRef = React.useRef(null);
  var modalContentRef = React.useRef(null);
  var titleId = getNodeId("modalTitle"); // NOTE: On Safari iOS, body-scroll-lock locks scrolling on all elements
  // except for the passed in ref. Need to pass the element that can scroll.
  // https://github.com/reakit/reakit/issues/469#issuecomment-549013422

  useLockBodyScroll(modalContentRef);
  useOnClickOutside(modalRef, onClose);
  useOnKeyDown(["Esc", "Escape"], onClose);
  return /*#__PURE__*/React.createElement(Overlay, rest, /*#__PURE__*/React.createElement("div", {
    className: style$v.container
  }, /*#__PURE__*/React.createElement("div", {
    "aria-labelledby": titleId,
    className: classNames__default['default'](style$v.modal, size === "large" && style$v.large, size === "medium" && style$v.medium, size === "small" && style$v.small, size === "xlarge" && style$v.xlarge),
    ref: modalRef,
    role: "dialog"
  }, /*#__PURE__*/React.createElement("div", {
    className: style$v.header
  }, /*#__PURE__*/React.createElement(OverlayCloseButton, _extends({
    "aria-label": "Close dialog",
    onClick: onClose
  }, closeButtonProps)), /*#__PURE__*/React.createElement("h2", {
    className: style$v.title,
    id: titleId
  }, title)), /*#__PURE__*/React.createElement("div", {
    className: style$v.content,
    ref: modalContentRef
  }, /*#__PURE__*/React.createElement("div", {
    className: style$v.contentInner
  }, children)), actions &&
  /*#__PURE__*/
  // NOTE: Safari needs a wrapping block element, otherwise a flex container
  // renders with no height.
  React.createElement("div", {
    className: style$v.actions
  }, actions))), /*#__PURE__*/React.createElement(OverlayScrim, null));
};

var Modal = props => {
  var {
    isOpen
  } = props,
      rest = _objectWithoutProperties(props, ["isOpen"]);

  if (!isOpen) {
    return null;
  }

  return /*#__PURE__*/React.createElement(ModalPortal, rest);
};

var getNodeId$1 = (scope, id) => {
  if (id) {
    return id;
  }

  return generateId(scope);
};
/**
 * A hook to create a no-conflict accessible id for DOM nodes.
 *
 * @param {string} scope — The scope used to generate a unique id.
 * @param {string} [id] — The custom id used to generate the node id.
 * @returns {string} — id
 */


var useNodeId = (scope, id) => {
  return React.useMemo(() => {
    return getNodeId$1(scope, id);
  }, [scope, id]);
};

var style$z = {"container":"PanelPortal-module_container__2DCOQ","right":"PanelPortal-module_right__1uD49","left":"PanelPortal-module_left__1xykX","panel":"PanelPortal-module_panel__3EEwi","small":"PanelPortal-module_small__2O-s9","medium":"PanelPortal-module_medium__3Hbd5","large":"PanelPortal-module_large__QBqMN","header":"PanelPortal-module_header__1bjIF","title":"PanelPortal-module_title__1wCxP","closeButton":"PanelPortal-module_closeButton__3-IOZ","content":"PanelPortal-module_content__1AogD","contentInner":"PanelPortal-module_contentInner__17Fdg","actions":"PanelPortal-module_actions__2lJSO"};

var PanelPortal = props => {
  var _applyCommonProps = applyCommonProps(props, PanelPortal, true),
      {
    actions,
    children,
    onClose,
    closeButtonProps,
    position = "left",
    size = "small",
    title
  } = _applyCommonProps,
      rest = _objectWithoutProperties(_applyCommonProps, ["actions", "children", "onClose", "closeButtonProps", "position", "size", "title"]);

  invariant(!!title, "Required property `title` not provided.");
  var panelRef = React.useRef(null);
  var panelContentRef = React.useRef(null);
  var titleId = useNodeId("panelTitle"); // NOTE: On Safari iOS, body-scroll-lock locks scrolling on all elements
  // except for the passed in ref. Need to pass the element that can scroll.
  // https://github.com/reakit/reakit/issues/469#issuecomment-549013422

  useLockBodyScroll(panelContentRef);
  useOnClickOutside(panelRef, onClose);
  useOnKeyDown(["Esc", "Escape"], onClose);
  return /*#__PURE__*/React.createElement(Overlay, rest, /*#__PURE__*/React.createElement("div", {
    className: classNames__default['default'](style$z.container, position === "left" && style$z.left, position === "right" && style$z.right)
  }, /*#__PURE__*/React.createElement("div", {
    "aria-labelledby": titleId,
    className: classNames__default['default'](style$z.panel, size === "small" && style$z.small, size === "medium" && style$z.medium, size === "large" && style$z.large),
    ref: panelRef,
    role: "dialog"
  }, typeof title === "function" && title({
    titleId
  }), typeof title !== "function" && /*#__PURE__*/React.createElement("div", {
    className: style$z.header
  }, /*#__PURE__*/React.createElement(OverlayCloseButton, _extends({
    "aria-label": "Close panel",
    className: style$z.closeButton,
    onClick: onClose
  }, closeButtonProps)), /*#__PURE__*/React.createElement("h2", {
    className: style$z.title,
    id: titleId
  }, title)), /*#__PURE__*/React.createElement("div", {
    className: style$z.content,
    ref: panelContentRef
  }, /*#__PURE__*/React.createElement("div", {
    className: style$z.contentInner
  }, children)), actions && /*#__PURE__*/React.createElement("div", {
    className: style$z.actions
  }, actions))), /*#__PURE__*/React.createElement(OverlayScrim, null));
};

var Panel = props => {
  var {
    isOpen
  } = props,
      rest = _objectWithoutProperties(props, ["isOpen"]);

  if (!isOpen) {
    return null;
  }

  return /*#__PURE__*/React.createElement(PanelPortal, rest);
};

var style$A = {"progressIndicator":"ProgressIndicator-module_progressIndicator__3iQ2M","track":"ProgressIndicator-module_track__2hcIi","trackFill":"ProgressIndicator-module_trackFill__2F6C2","error":"ProgressIndicator-module_error__3H8Aa","info":"ProgressIndicator-module_info__2H7Yu","success":"ProgressIndicator-module_success__3L2XV","warning":"ProgressIndicator-module_warning__7WpTx","labelContainer":"ProgressIndicator-module_labelContainer___BWJ6","label":"ProgressIndicator-module_label__K1hrb","valueLabel":"ProgressIndicator-module_valueLabel__1sKow"};

/**
 * A hook to create a no-conflict accessible id for DOM nodes.
 * @private
 *
 * @param {string} scope The scope used to generate a unique id
 * @param {string} [id] The custom id used to generate the node id
 * @returns {string} The generated id
 */

var useNodeId$1 = (scope, id) => React.useMemo(() => {
  if (id) {
    return id;
  }

  return generateId(scope);
}, [scope, id]);

var ProgressIndicator = props => {
  var _applyCommonProps = applyCommonProps(props, ProgressIndicator),
      {
    a11yLabelledBy,
    className,
    label,
    max = 100,
    min = 0,
    value = 0,
    valueLabel,
    variant = "info"
  } = _applyCommonProps,
      rest = _objectWithoutProperties(_applyCommonProps, ["a11yLabelledBy", "className", "label", "max", "min", "value", "valueLabel", "variant"]);

  var labelCount = (label ? 1 : 0) + (a11yLabelledBy ? 1 : 0) === 1;
  invariant(labelCount, "`ProgressIndicator` accessibility violation. `ProgressIndicator` requires a `label` OR an `a11yLabelledBy`.");
  var labelId = useNodeId$1("progress_indicator");
  var hasLabel = label || valueLabel;
  return /*#__PURE__*/React__default['default'].createElement("span", _extends({
    "aria-valuemax": max,
    "aria-valuemin": min,
    "aria-valuenow": value,
    className: classNames__default['default'](style$A.progressIndicator, className),
    role: "progressbar"
  }, a11yLabelledBy && {
    "aria-labelledby": a11yLabelledBy
  }, label && {
    "aria-labelledby": labelId
  }, valueLabel && {
    "aria-valuetext": valueLabel
  }, rest), /*#__PURE__*/React__default['default'].createElement("span", {
    className: style$A.track
  }, /*#__PURE__*/React__default['default'].createElement("span", {
    className: classNames__default['default'](style$A.trackFill, variant === "error" && style$A.error, variant === "info" && style$A.info, variant === "success" && style$A.success, variant === "warning" && style$A.warning) // eslint-disable-next-line react/forbid-dom-props
    ,
    style: {
      width: "".concat((value - min) / (max - min) * 100, "%")
    }
  })), hasLabel && /*#__PURE__*/React__default['default'].createElement("span", {
    className: style$A.labelContainer
  }, /*#__PURE__*/React__default['default'].createElement("span", _extends({
    className: style$A.label
  }, label && {
    id: labelId
  }), label), /*#__PURE__*/React__default['default'].createElement("span", {
    className: style$A.valueLabel
  }, valueLabel)));
};
ProgressIndicator.displayName = "ProgressIndicator";

var style$B = {"progressTracker":"ProgressTracker-module_progressTracker__3OL0Y","track":"ProgressTracker-module_track__1SbDh","info":"ProgressTracker-module_info__1b4qk","success":"ProgressTracker-module_success__3JXny","warning":"ProgressTracker-module_warning__22f5y","labels":"ProgressTracker-module_labels__1yuZi","dot":"ProgressTracker-module_dot__2_y5n","itemFirst":"ProgressTracker-module_itemFirst__1ATHk","itemLast":"ProgressTracker-module_itemLast__1Hryj","itemActive":"ProgressTracker-module_itemActive__mjV6O"};

var style$C = {"item":"ProgressTrackerItem-module_item__18lOa","itemCurrent":"ProgressTrackerItem-module_itemCurrent__-cm82"};

var ProgressTracker = props => {
  var {
    activeIndex = 0,
    children,
    className,
    variant = "info"
  } = props,
      rest = _objectWithoutProperties(props, ["activeIndex", "children", "className", "variant"]);

  var lastIndex = React__default['default'].Children.count(children) - 1;
  var clampedIndex;

  if (lastIndex >= 0 && activeIndex > lastIndex) {
    clampedIndex = lastIndex;
  } else if (activeIndex < 0) {
    clampedIndex = 0;
  } else {
    clampedIndex = activeIndex;
  }

  return /*#__PURE__*/React__default['default'].createElement("div", _extends({
    className: classNames__default['default'](style$B.progressTracker, variant === "info" && style$B.info, variant === "success" && style$B.success, variant === "warning" && style$B.warning, className)
  }, rest), /*#__PURE__*/React__default['default'].createElement("span", {
    className: style$B.track // eslint-disable-next-line react/forbid-dom-props
    ,
    style: {
      width: "".concat(100 * clampedIndex / lastIndex, "%")
    }
  }), /*#__PURE__*/React__default['default'].createElement("div", {
    className: style$B.labels
  }, React__default['default'].Children.map(children, (child, index) => {
    if (! /*#__PURE__*/React__default['default'].isValidElement(child)) {
      return null;
    }

    return /*#__PURE__*/React__default['default'].cloneElement(child, _objectSpread2(_objectSpread2({}, child.props), {}, {
      className: classNames__default['default'](index === 0 && style$B.itemFirst, index === lastIndex && style$B.itemLast, activeIndex >= index && style$B.itemActive, activeIndex === index && style$C.itemCurrent, child.props.className),
      children: /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement("span", {
        className: style$B.dot
      }), child.props.children),
      key: index,
      style: _objectSpread2(_objectSpread2({}, child.props.style), {}, {
        width: "".concat(index === 0 || index === lastIndex ? 50 / lastIndex : 100 / lastIndex, "%")
      })
    }));
  })));
};

var ProgressTrackerItem = props => {
  var {
    children,
    className
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className"]);

  return /*#__PURE__*/React__default['default'].createElement("span", _extends({
    className: classNames__default['default'](style$C.item, className)
  }, rest), children);
};

var style$D = {"label":"Radio-module_label__3Oqkm","checked":"Radio-module_checked__ZmPQK","isDisabled":"Radio-module_isDisabled__23Nwo","input":"Radio-module_input__1djzp","dot":"Radio-module_dot__ETpuz","dotFill":"Radio-module_dotFill__2j-eK"};

var Radio = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    checked = false,
    className,
    disabled = false,
    id: initialId,
    label,
    name,
    onChange,
    radioProps = {},
    value
  } = props,
      rest = _objectWithoutProperties(props, ["checked", "className", "disabled", "id", "label", "name", "onChange", "radioProps", "value"]);

  var {
    className: radioClassName
  } = radioProps,
      radioRest = _objectWithoutProperties(radioProps, ["className"]);

  var id = getNodeId("radio", initialId);
  return /*#__PURE__*/React.createElement("label", _extends({
    className: classNames__default['default'](style$D.label, checked && style$D.checked, disabled && style$D.isDisabled, className),
    htmlFor: id
  }, rest), /*#__PURE__*/React.createElement("input", _extends({
    checked: checked,
    className: classNames__default['default'](style$D.input, radioClassName),
    disabled: disabled,
    id: id,
    name: name,
    onChange: onChange,
    ref: ref,
    type: "radio"
  }, value && {
    value
  }, radioRest)), /*#__PURE__*/React.createElement("span", {
    className: style$D.dot
  }, /*#__PURE__*/React.createElement("span", {
    className: style$D.dotFill
  })), label);
});
Radio.displayName = "Radio";

var style$E = {"container":"Select-module_container__CRzws","select":"Select-module_select__no4UF","error":"Select-module_error__316gK","icon":"Select-module_icon__1NPRh"};

var Select = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    children,
    className,
    disabled = false,
    error,
    helperText,
    id: initialId,
    label,
    onChange,
    selectProps: initialSelectProps,
    value
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className", "disabled", "error", "helperText", "id", "label", "onChange", "selectProps", "value"]);

  var [isFocused, setIsFocused] = React.useState(false);
  var id = getNodeId("select", initialId);
  var helperId = "".concat(id, "_helper");

  var selectProps = _objectSpread2(_objectSpread2(_objectSpread2({
    disabled,
    id,
    onChange,
    value
  }, (error || helperText) && {
    "aria-describedby": helperId
  }), initialSelectProps), {}, {
    className: classNames__default['default'](style$E.select, error && style$E.error, initialSelectProps === null || initialSelectProps === void 0 ? void 0 : initialSelectProps.className),

    onBlur(event) {
      var _initialSelectProps$o;

      setIsFocused(false);
      initialSelectProps === null || initialSelectProps === void 0 ? void 0 : (_initialSelectProps$o = initialSelectProps.onBlur) === null || _initialSelectProps$o === void 0 ? void 0 : _initialSelectProps$o.call(initialSelectProps, event);
    },

    onFocus(event) {
      var _initialSelectProps$o2;

      setIsFocused(true);
      initialSelectProps === null || initialSelectProps === void 0 ? void 0 : (_initialSelectProps$o2 = initialSelectProps.onFocus) === null || _initialSelectProps$o2 === void 0 ? void 0 : _initialSelectProps$o2.call(initialSelectProps, event);
    }

  });

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$E.container, className)
  }, rest), /*#__PURE__*/React.createElement(FormControlLabel, {
    disabled: disabled,
    htmlFor: id,
    isFocused: isFocused
  }, label), /*#__PURE__*/React.createElement("select", _extends({}, selectProps, {
    ref: ref
  }), children), /*#__PURE__*/React.createElement(WrappedIcon$2, {
    className: style$E.icon,
    size: "medium"
  }), (error || helperText) && /*#__PURE__*/React.createElement(FormControlHelperText, {
    id: helperId
  }, error && /*#__PURE__*/React.createElement(FormControlError, null, error), !error && /*#__PURE__*/React.createElement("span", null, helperText)));
});
Select.displayName = "Select";

var style$F = {"container":"SelectFilter-module_container__14FOQ","text":"SelectFilter-module_text__1tP8N","chevronIcon":"SelectFilter-module_chevronIcon__4OWzA"};

var SelectFilter = props => {
  var {
    value,
    className,
    onOpenClick,
    dropdownProps
  } = props,
      restProps = _objectWithoutProperties(props, ["value", "className", "onOpenClick", "dropdownProps"]);

  return /*#__PURE__*/React.createElement(Dropdown, dropdownProps, /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$F.container, className),
    onClick: onOpenClick
  }, restProps), /*#__PURE__*/React.createElement("span", {
    className: classNames__default['default'](style$F.text)
  }, value), /*#__PURE__*/React.createElement(WrappedIcon$5, {
    className: classNames__default['default'](style$F.chevronIcon)
  })));
};
SelectFilter.displayName = "SelectFilter";

var style$G = {"root":"Snack-module_root__1jJ7N","container":"Snack-module_container__1tBbp","message":"Snack-module_message__3cF3l","button":"Snack-module_button__3wdS2","icon":"Snack-module_icon__3pQRG"};

var Snack = _ref => {
  var {
    action,
    children,
    className,
    onClose,
    closeButtonProps
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["action", "children", "className", "onClose", "closeButtonProps"]);

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$G.root, className)
  }, rest), /*#__PURE__*/React.createElement("div", {
    className: style$G.container
  }, /*#__PURE__*/React.createElement("div", {
    className: style$G.message
  }, children), action, /*#__PURE__*/React.createElement("button", _extends({
    "aria-label": "Close",
    className: style$G.button,
    onClick: onClose,
    type: "button"
  }, closeButtonProps), /*#__PURE__*/React.createElement(WrappedIcon$8, {
    className: style$G.icon
  }))));
};

var style$H = {"action":"SnackAction-module_action__3KIrK"};

// TODO: Replace with Tertiary Button once one is made available
var SnackAction = /*#__PURE__*/React.forwardRef((_ref, ref) => {
  var {
    className
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["className"]);

  return /*#__PURE__*/React.createElement("button", _extends({
    ref: ref,
    type: "button",
    className: classNames__default['default'](style$H.action, className)
  }, rest));
});
SnackAction.displayName = "SnackAction";

var SnackbarContext = /*#__PURE__*/React.createContext({
  /* eslint-disable-next-line @typescript-eslint/no-empty-function */
  addSnack:
  /* istanbul ignore next */
  () => {}
});

/**
 *  React hook for hijacking the functionality of the 'tab' key. When 'tab' is pressed, focus wil move to the element referenced by the 'ref' param instead of where it naturally would have moved.
 *
 * @example
 *  const MyComponent = () => {
 *    const myRef = useRef(null);
 *
 *    useFocusControl(myRef);
 *
 *    return (
 *      <div>
 *        <button ref={myRef} onClick={() => {}}>
 *          action
 *        </button>
 *      </div>
 *    );
 *  };
 *
 *  // Regardless of where focus was when the component mounted, the next press of the 'tab' key will focus the button in this component.
 *
 * @param {React.RefObject} ref —  The ref to the component that will recieve focus once the 'tab' key is pressed
 * @param {array} conditions — An array containing variables that when changed will rerun the effect.
 * @returns {void}
 */

var useFocusControl = (ref,
/* eslint-disable-next-line @typescript-eslint/no-explicit-any */
conditions = []) => {
  React.useEffect(() => {
    var _ref$current;

    var canFocus = ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.focus;

    var handleFocusChange = e => {
      e.preventDefault();
      /* istanbul ignore else */

      if (canFocus) {
        var _ref$current2;

        ref === null || ref === void 0 ? void 0 : (_ref$current2 = ref.current) === null || _ref$current2 === void 0 ? void 0 : _ref$current2.focus();
        document.removeEventListener("keydown", handleFocusChange);
      }
    };

    if (canFocus) {
      document.addEventListener("keydown", handleFocusChange);
    }

    return () => {
      document.removeEventListener("keydown", handleFocusChange);
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [ref, ...conditions]);
};

/**
 * React hook for storing the focused element when a component mounts then returning the focus to that component when the component unmounts.
 *
 * @example
 * const MyComponent = () => {
 *    useReturnFocus();
 *    return <div>Content</div>
 *  }
 *  // Will return focus to the element that had focus when this component mounted
 *
 * @param {array} conditions — An array containing variables that when changed will rerun the effect.
 * @param {boolean} disable —  When true, will prevent focus from returning to the previously focused element.
 * @returns {void}
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any

var useReturnFocus = (
/* istanbul ignore next: default case */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
conditions = [], disable = false) => {
  var [previouslyFocusedElement, setPreviouslyFocusedElement] = React.useState(null);
  React.useEffect(() => {
    /* istanbul ignore else */
    if (typeof document !== "undefined") {
      var {
        activeElement
      } = document;
      /* istanbul ignore else */

      if (activeElement instanceof HTMLElement) {
        setPreviouslyFocusedElement(activeElement);
      }
    }

    return () => {
      if (!disable) {
        previouslyFocusedElement === null || previouslyFocusedElement === void 0 ? void 0 : previouslyFocusedElement.focus();
      }
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [disable, ...conditions]);
};

var style$I = {"root":"Snackbar-module_root__2E0al","fadeIn":"Snackbar-module_fadeIn__2ib-u","fadeOut":"Snackbar-module_fadeOut__3oXks"};

var SnackbarProvider = ({
  children
}) => {
  var initialActionRef = React.useRef(null);
  var [activeSnack, setActiveSnack] = React.useState();
  var [actionRef, setActionRef] = React.useState(initialActionRef);
  var [isRemoving, setRemoving] = React.useState(false); // @see {@link https://reactjs.org/docs/context.html#caveats}

  var contextValue = React.useRef({
    addSnack: setActiveSnack
  }); // do not return focus if no action button is present

  var disableReturnFocus = !actionRef.current;
  useFocusControl(actionRef, [actionRef, activeSnack]);
  useReturnFocus([activeSnack, actionRef], disableReturnFocus);
  React.useEffect(() => {
    if (!activeSnack) {
      return () => undefined;
    }

    var {
      message,
      actionButton,
      autoHideDuration = null
    } = activeSnack;

    if (actionButton !== null && actionButton !== void 0 && actionButton.ref && actionButton.ref !== actionRef) {
      setActionRef(actionButton === null || actionButton === void 0 ? void 0 : actionButton.ref);
    }

    var defaultDuration = message.length > 120 ? 3500 + (message.length - 120) * 60 : 3500;
    var duration = autoHideDuration ? autoHideDuration : defaultDuration;
    var timeoutID = setTimeout(() => {
      setRemoving(true);
    }, duration);
    return () => {
      clearTimeout(timeoutID);
    };
  }, [activeSnack]);
  var onAnimationEnd = React.useCallback(() => {
    /* istanbul ignore if */
    if (!isRemoving) {
      return;
    }

    setActiveSnack(undefined);
    setRemoving(false);
  }, [isRemoving]);
  var onAnimationStart = React.useCallback(() => {
    /* istanbul ignore if */
    if (!isRemoving || typeof (activeSnack === null || activeSnack === void 0 ? void 0 : activeSnack.onClose) !== "function") {
      return;
    }

    activeSnack.onClose();
  }, [isRemoving, activeSnack]);
  var snack;

  if (activeSnack) {
    var {
      actionButton,
      message,
      onClose,
      className,
      autoHideDuration
    } = activeSnack,
        rest = _objectWithoutProperties(activeSnack, ["actionButton", "message", "onClose", "className", "autoHideDuration"]);

    var action = actionButton && /*#__PURE__*/React.createElement(SnackAction, {
      ref: actionRef,
      onClick: () => {
        actionButton.onClick();
        setRemoving(true);
      }
    }, actionButton.message);
    snack = /*#__PURE__*/React.createElement(Snack, _extends({
      action: action,
      className: classNames__default['default'](isRemoving ? style$I.fadeOut : style$I.fadeIn, className),
      onAnimationEnd: onAnimationEnd,
      onAnimationStart: onAnimationStart,
      onClose: () => setRemoving(true)
    }, rest), message);
  }

  return /*#__PURE__*/React.createElement(SnackbarContext.Provider, {
    value: contextValue.current
  }, children, /*#__PURE__*/React.createElement("div", {
    className: style$I.root,
    "aria-live": "assertive"
  }, snack));
};

var useSnackbar = () => React.useContext(SnackbarContext);

var style$J = {"container":"Spinner-module_container__S6ux8","gray":"Spinner-module_gray__2ZNun","white":"Spinner-module_white__aVWWY","large":"Spinner-module_large__1tVBM","small":"Spinner-module_small__1HajD","pill":"Spinner-module_pill__Hg1t5","pill2":"Spinner-module_pill2__wj40Y","pill3":"Spinner-module_pill3__wHThi","pill4":"Spinner-module_pill4__CZ7cg","pill5":"Spinner-module_pill5__2HdRB","pill6":"Spinner-module_pill6__2oDps"};

var Spinner = props => {
  var {
    a11yLabel = "Loading…",
    className,
    color = "gray",
    size = "large",
    spinnerProps = {}
  } = props,
      rest = _objectWithoutProperties(props, ["a11yLabel", "className", "color", "size", "spinnerProps"]);

  var uniqueTitleId = getNodeId("svg_title");
  return /*#__PURE__*/React__default['default'].createElement("span", _extends({
    className: classNames__default['default'](style$J.container, size === "large" && style$J.large, size === "small" && style$J.small, className),
    role: "status"
  }, rest), /*#__PURE__*/React__default['default'].createElement("svg", _extends({
    "aria-labelledby": uniqueTitleId,
    className: classNames__default['default'](color === "gray" && style$J.gray, color === "white" && style$J.white),
    role: "img",
    viewBox: "0 0 48 48",
    xmlns: "http://www.w3.org/2000/svg"
  }, spinnerProps), /*#__PURE__*/React__default['default'].createElement("title", {
    id: uniqueTitleId
  }, a11yLabel), /*#__PURE__*/React__default['default'].createElement("defs", null, /*#__PURE__*/React__default['default'].createElement("path", {
    d: "M24.7 3c-1.593 0-2.859.89-2.859 1.969l.985 10.992c.093.656.914 1.172 1.875 1.172.984 0 1.804-.516 1.922-1.172l.96-10.992C27.584 3.89 26.319 3 24.702 3z",
    id: "ld-spinner-pill"
  })), /*#__PURE__*/React__default['default'].createElement("use", {
    className: style$J.pill,
    href: "#ld-spinner-pill"
  }), /*#__PURE__*/React__default['default'].createElement("use", {
    className: classNames__default['default'](style$J.pill, style$J.pill2),
    href: "#ld-spinner-pill"
  }), /*#__PURE__*/React__default['default'].createElement("use", {
    className: classNames__default['default'](style$J.pill, style$J.pill3),
    href: "#ld-spinner-pill"
  }), /*#__PURE__*/React__default['default'].createElement("use", {
    className: classNames__default['default'](style$J.pill, style$J.pill4),
    href: "#ld-spinner-pill"
  }), /*#__PURE__*/React__default['default'].createElement("use", {
    className: classNames__default['default'](style$J.pill, style$J.pill5),
    href: "#ld-spinner-pill"
  }), /*#__PURE__*/React__default['default'].createElement("use", {
    className: classNames__default['default'](style$J.pill, style$J.pill5),
    href: "#ld-spinner-pill"
  })));
};

var style$K = {"label":"Switch-module_label__2XnYg","checked":"Switch-module_checked__1HGIg","isDisabled":"Switch-module_isDisabled__1Nc6M","input":"Switch-module_input__3MVz6","knob":"Switch-module_knob__2DVGi","pill":"Switch-module_pill__3NVKp","hasLabel":"Switch-module_hasLabel__GJYTY","switchRoot":"Switch-module_switchRoot__1Wn9q"};

var Switch = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    a11yLabelledBy,
    switchProps = {},
    checked = false,
    className,
    disabled = false,
    id: initialId,
    label,
    name,
    onChange,
    value
  } = props,
      rest = _objectWithoutProperties(props, ["a11yLabelledBy", "switchProps", "checked", "className", "disabled", "id", "label", "name", "onChange", "value"]);

  var labelCount = (label ? 1 : 0) + (a11yLabelledBy ? 1 : 0) === 1;
  invariant(labelCount, "`Switch` accessibility violation. `Switch` requires a `label` OR an `a11yLabelledBy`.");

  var {
    className: switchClassName
  } = switchProps,
      switchRest = _objectWithoutProperties(switchProps, ["className"]);

  var id = getNodeId("switch", initialId);
  var input = /*#__PURE__*/React.createElement("span", {
    className: classNames__default['default'](style$K.switchRoot, !!label && style$K.hasLabel)
  }, /*#__PURE__*/React.createElement("input", _extends({
    checked: checked,
    className: classNames__default['default'](style$K.input, switchClassName),
    disabled: disabled,
    id: id,
    name: name,
    onChange: onChange,
    ref: ref,
    type: "checkbox"
  }, a11yLabelledBy && {
    "aria-labelledby": a11yLabelledBy
  }, value && {
    value
  }, switchRest)), /*#__PURE__*/React.createElement("span", {
    className: classNames__default['default'](style$K.knob, !!checked && style$K.hasLabel)
  }), /*#__PURE__*/React.createElement("span", {
    className: style$K.pill
  }));
  return /*#__PURE__*/React.createElement("label", _extends({
    className: classNames__default['default'](style$K.label, checked && style$K.checked, disabled && style$K.isDisabled, className),
    htmlFor: id
  }, rest), input, label);
});
Switch.displayName = "Switch";

var style$L = {"tab":"Tab-module_tab__2qeLQ","tabContent":"Tab-module_tabContent__29Flr"};

var Tab = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    children,
    className,
    id,
    selected
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className", "id", "selected"]);

  return /*#__PURE__*/React.createElement("button", _extends({
    className: classNames__default['default'](style$L.tab, className),
    id: id,
    ref: ref,
    role: "tab",
    type: "button"
  }, selected && {
    "aria-selected": true,
    "aria-expanded": true
  }, rest), /*#__PURE__*/React.createElement("span", {
    className: style$L.tabContent
  }, children));
});
Tab.displayName = "Tab";

var style$M = {"tabGroupContainer":"TabGroup-module_tabGroupContainer__1Cb-K","tabGroup":"TabGroup-module_tabGroup__3XZ3_"};

/**
 * Tab Group
 *
 * @see {@link https://whatsock.com/tsg/Coding%20Arena/ARIA%20and%20Non-ARIA%20Tabs/ARIA%20Tabs%20(Internal%20Content)/demo.htm}
 *
 * @param {TabGroupProps} props - Tab group props
 * @returns {(React.ReactElement|null)} — Tab group
 */
var TabGroup = props => {
  var {
    children,
    content,
    onChange,
    selectedIndex = 0
  } = props,
      rest = _objectWithoutProperties(props, ["children", "content", "onChange", "selectedIndex"]);

  var hasTabs = React.Children.toArray(children).length > 0;
  var refs = React.useRef({});
  invariant(hasTabs, "Invalid prop `children` supplied to `TabGroup`.");

  if (!hasTabs) {
    return null;
  }

  var onKeyDown = event => {
    var totalChildren = children.length;
    var index = 0;

    for (index = 0; index < totalChildren; index += 1) {
      if (refs.current[index] === document.activeElement) {
        break;
      }
    }

    if (index >= totalChildren) {
      return;
    }

    refs.current[index].tabIndex = -1;

    switch (event.key) {
      case "ArrowRight":
        refs.current[index >= totalChildren - 1 ? 0 : index + 1].focus();
        break;

      case "ArrowLeft":
        refs.current[index <= 0 ? totalChildren - 1 : index - 1].focus();
        break;

      case "Home":
        refs.current[0].focus();
        break;

      case "End":
        refs.current[totalChildren - 1].focus();
        break;

      case "Tab":
        refs.current[index].tabIndex = 0;
        break;
    }
  };

  var tabs = React.Children.map(children, (child, i) => {
    var selected = i === selectedIndex;
    var tabItem = child;
    var id = getNodeId("tab", tabItem.props.id);
    return /*#__PURE__*/React.cloneElement(tabItem, _objectSpread2({
      id,
      onKeyDown,
      selected,
      onClick: () => onChange(i),
      ref: currentTab => {
        refs.current[i] = currentTab; // TODO: no idea how to type this properly

        var {
          ref
        } = tabItem;

        if (typeof ref !== "function") {
          return;
        } // @see {@link https://github.com/facebook/react/issues/8873#issuecomment-275423780}


        ref(currentTab);
      }
    }, selected ? {} : {
      tabIndex: -1
    }));
  });
  var ariaOwns = (tabs || []).map(tab => tab.props.id);
  return /*#__PURE__*/React.createElement("div", _extends({
    className: style$M.tabGroupContainer
  }, rest), /*#__PURE__*/React.createElement("div", {
    "aria-owns": ariaOwns.join(" "),
    className: style$M.tabGroup,
    role: "tablist"
  }, tabs), /*#__PURE__*/React.createElement("div", {
    "aria-labelledby": ariaOwns[selectedIndex] // per a11y, this is a special case: https://jira.walmart.com/browse/CEDCORE-676
    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
    ,
    tabIndex: 0,
    role: "tabpanel"
  }, content));
};

var style$N = {"tag":"Tag-module_tag__1UMgT","filled":"Tag-module_filled__1FyiX","blue":"Tag-module_blue__3OTRd","gray":"Tag-module_gray__t50Bf","outlined":"Tag-module_outlined__2F1yn"};

var Tag = props => {
  var {
    className,
    color = "blue",
    variant = "outlined"
  } = props,
      rest = _objectWithoutProperties(props, ["className", "color", "variant"]);

  return /*#__PURE__*/React.createElement("span", _extends({
    className: classNames__default['default'](style$N.tag, color === "blue" && style$N.blue, color === "gray" && style$N.gray, variant === "filled" && style$N.filled, variant === "outlined" && style$N.outlined, className)
  }, rest));
};

var style$O = {"body":"Body-module_body__1D4e_","body1":"Body-module_body1__1gQk7","body2":"Body-module_body2__2Ly7v"};

var Body = props => {
  var {
    as: asProp,
    className,
    variant = "1"
  } = props,
      rest = _objectWithoutProperties(props, ["as", "className", "variant"]);
  /**
   * Setting `{ as = 'span' }` doesn't work with a generic function parameter. Set the default
   * element within the function body.
   *
   * @see {@link https://stackoverflow.com/a/59363875/2338194}
   */


  var Component = asProp || "span";
  return /*#__PURE__*/React__default['default'].createElement(Component, _extends({
    className: classNames__default['default'](style$O.body, variant === "1" && style$O.body1, variant === "2" && style$O.body2, className)
  }, rest));
};

var style$P = {"caption":"Caption-module_caption__1zmZw"};

var Caption = props => {
  var {
    as: asProp,
    className
  } = props,
      rest = _objectWithoutProperties(props, ["as", "className"]);
  /**
   * Setting `{ as = 'span' }` doesn't work with a generic function parameter. Set the default
   * element within the function body.
   *
   * @see {@link https://stackoverflow.com/a/59363875/2338194}
   */


  var Component = asProp || "span";
  return /*#__PURE__*/React__default['default'].createElement(Component, _extends({
    className: classNames__default['default'](style$P.caption, className)
  }, rest));
};

var style$Q = {"display":"Display-module_display__NqOr0","display1":"Display-module_display1__3PFw4","display2":"Display-module_display2__12bLr"};

var Display = props => {
  var {
    as: asProp,
    className,
    variant = "1"
  } = props,
      rest = _objectWithoutProperties(props, ["as", "className", "variant"]);
  /**
   * Setting `{ as = 'span' }` doesn't work with a generic function parameter. Set the default
   * element within the function body.
   *
   * @see {@link https://stackoverflow.com/a/59363875/2338194}
   */


  var Component = asProp !== null && asProp !== void 0 ? asProp : "span";
  return /*#__PURE__*/React__default['default'].createElement(Component, _extends({
    className: classNames__default['default'](style$Q.display, variant === "1" && style$Q.display1, variant === "2" && style$Q.display2, className)
  }, rest));
};

var style$R = {"heading":"Heading-module_heading__eRS7o"};

var Heading = props => {
  var {
    as: asProp,
    className
  } = props,
      rest = _objectWithoutProperties(props, ["as", "className"]);
  /**
   * Setting `{ as = 'span' }` doesn't work with a generic function parameter. Set the default
   * element within the function body.
   *
   * @see {@link https://stackoverflow.com/a/59363875/2338194}
   */


  var Component = asProp !== null && asProp !== void 0 ? asProp : "span";
  return /*#__PURE__*/React__default['default'].createElement(Component, _extends({
    className: classNames__default['default'](style$R.heading, className)
  }, rest));
};

var style$S = {"pageTitle":"PageTitle-module_pageTitle__3iWz5"};

var PageTitle = props => {
  var {
    as: asProp,
    className
  } = props,
      rest = _objectWithoutProperties(props, ["as", "className"]);
  /**
   * Setting `{ as = 'span' }` doesn't work with a generic function parameter. Set the default
   * element within the function body.
   *
   * @see {@link https://stackoverflow.com/a/59363875/2338194}
   */


  var Component = asProp !== null && asProp !== void 0 ? asProp : "span";
  return /*#__PURE__*/React__default['default'].createElement(Component, _extends({
    className: classNames__default['default'](style$S.pageTitle, className)
  }, rest));
};

var style$T = {"subheading":"Subheading-module_subheading__2i0VO","subheading1":"Subheading-module_subheading1__3K2-G","subheading2":"Subheading-module_subheading2__3aOul"};

var Subheading = props => {
  var {
    as: asProp,
    className,
    variant = "1"
  } = props,
      rest = _objectWithoutProperties(props, ["as", "className", "variant"]);
  /**
   * Setting `{ as = 'span }` doesn't work with a generic function parameter. Set the default
   * element within the function Subheading.
   *
   * @see {@link https://stackoverflow.com/a/59363875/2338194}
   */


  var Component = asProp || "span";
  return /*#__PURE__*/React__default['default'].createElement(Component, _extends({
    className: classNames__default['default'](style$T.subheading, variant === "1" && style$T.subheading1, variant === "2" && style$T.subheading2, className)
  }, rest));
};

var style$U = {"container":"TextArea-module_container__3rf-N","textarea":"TextArea-module_textarea__2Oa5Q","error":"TextArea-module_error__1EMYZ","helperText":"TextArea-module_helperText__2v6ie","maxLength":"TextArea-module_maxLength__2qjc5"};

var TextArea = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    className,
    disabled = false,
    error,
    helperText,
    id: initialId,
    label,
    maxLength,
    onChange,
    placeholder,
    textAreaProps: initialTextAreaProps,
    value = ""
  } = props,
      rest = _objectWithoutProperties(props, ["className", "disabled", "error", "helperText", "id", "label", "maxLength", "onChange", "placeholder", "textAreaProps", "value"]);

  var [isFocused, setIsFocused] = React.useState(false);
  var [length, setLength] = React.useState(value.length);
  var id = getNodeId("textArea", initialId);
  var helperId = "".concat(id, "_helper");

  var textAreaProps = _objectSpread2(_objectSpread2(_objectSpread2({
    disabled,
    id,
    maxLength,
    placeholder,
    value,
    onChange: event => {
      setLength(event.target.value.length);
      onChange(event);
    }
  }, (error || helperText || maxLength) && {
    "aria-describedby": helperId
  }), initialTextAreaProps), {}, {
    className: classNames__default['default'](style$U.textarea, error && style$U.error, initialTextAreaProps === null || initialTextAreaProps === void 0 ? void 0 : initialTextAreaProps.className),

    onBlur(event) {
      var _initialTextAreaProps;

      setIsFocused(false);
      initialTextAreaProps === null || initialTextAreaProps === void 0 ? void 0 : (_initialTextAreaProps = initialTextAreaProps.onBlur) === null || _initialTextAreaProps === void 0 ? void 0 : _initialTextAreaProps.call(initialTextAreaProps, event);
    },

    onFocus(event) {
      var _initialTextAreaProps2;

      setIsFocused(true);
      initialTextAreaProps === null || initialTextAreaProps === void 0 ? void 0 : (_initialTextAreaProps2 = initialTextAreaProps.onFocus) === null || _initialTextAreaProps2 === void 0 ? void 0 : _initialTextAreaProps2.call(initialTextAreaProps, event);
    }

  });

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$U.container, className)
  }, rest), /*#__PURE__*/React.createElement(FormControlLabel, {
    disabled: disabled,
    htmlFor: id,
    isEmpty: !placeholder && !value,
    isFocused: isFocused
  }, label), /*#__PURE__*/React.createElement("textarea", _extends({}, textAreaProps, {
    ref: ref
  })), (error || helperText || maxLength) && /*#__PURE__*/React.createElement(FormControlHelperText, {
    className: style$U.helperText,
    id: helperId
  }, error && /*#__PURE__*/React.createElement(FormControlError, null, error), !error && /*#__PURE__*/React.createElement("span", null, helperText), maxLength && /*#__PURE__*/React.createElement("span", {
    className: style$U.maxLength
  }, length, " / ", maxLength)));
});
TextArea.displayName = "TextArea";

var style$V = {"container":"TextField-module_container__2Txix","label":"TextField-module_label__1EkH9","isFocused":"TextField-module_isFocused__37hAz","inputContainer":"TextField-module_inputContainer__1_4_Y","isDisabled":"TextField-module_isDisabled__3gTvV","error":"TextField-module_error__1J67e","input":"TextField-module_input__1FX8T","leading":"TextField-module_leading__3iu1h","icon":"TextField-module_icon__2N-Tk","trailing":"TextField-module_trailing__ptQU5"};

var autoComplete = {
  email: "email",
  password: "new-password",
  tel: "tel"
};
var TextField = /*#__PURE__*/React.forwardRef( // eslint-disable-next-line complexity
(props, ref) => {
  var {
    className,
    disabled = false,
    error,
    helperText,
    id: initialId,
    label,
    leading,
    onChange,
    placeholder,
    textFieldProps: initialTextFieldProps,
    trailing,
    type,
    value = ""
  } = props,
      rest = _objectWithoutProperties(props, ["className", "disabled", "error", "helperText", "id", "label", "leading", "onChange", "placeholder", "textFieldProps", "trailing", "type", "value"]);

  var [isFocused, setIsFocused] = React.useState(false);
  var id = getNodeId("select", initialId);
  var helperId = "".concat(id, "_helper");

  var textFieldProps = _objectSpread2(_objectSpread2(_objectSpread2({
    disabled,
    id,
    onChange,
    placeholder,
    type,
    value,
    autoComplete: type && autoComplete[type]
  }, (error || helperText) && {
    "aria-describedby": helperId
  }), initialTextFieldProps), {}, {
    className: classNames__default['default'](style$V.input, initialTextFieldProps === null || initialTextFieldProps === void 0 ? void 0 : initialTextFieldProps.className),

    onBlur(event) {
      var _initialTextFieldProp;

      setIsFocused(false);
      initialTextFieldProps === null || initialTextFieldProps === void 0 ? void 0 : (_initialTextFieldProp = initialTextFieldProps.onBlur) === null || _initialTextFieldProp === void 0 ? void 0 : _initialTextFieldProp.call(initialTextFieldProps, event);
    },

    onFocus(event) {
      var _initialTextFieldProp2;

      setIsFocused(true);
      initialTextFieldProps === null || initialTextFieldProps === void 0 ? void 0 : (_initialTextFieldProp2 = initialTextFieldProps.onFocus) === null || _initialTextFieldProp2 === void 0 ? void 0 : _initialTextFieldProp2.call(initialTextFieldProps, event);
    }

  });

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames__default['default'](style$V.container, className)
  }, rest), /*#__PURE__*/React.createElement(FormControlLabel, {
    className: classNames__default['default'](!isFocused && !placeholder && !value && leading && style$V.label),
    disabled: disabled,
    htmlFor: id,
    isEmpty: !placeholder && !value,
    isFocused: isFocused
  }, label), /*#__PURE__*/React.createElement("div", {
    className: classNames__default['default'](style$V.inputContainer, disabled && style$V.isDisabled, error && style$V.error, isFocused && style$V.isFocused)
  }, leading && /*#__PURE__*/React.createElement("span", {
    "aria-hidden": true,
    className: classNames__default['default'](style$V.icon, style$V.leading)
  }, leading), /*#__PURE__*/React.createElement("input", _extends({}, textFieldProps, {
    ref: ref
  })), trailing && /*#__PURE__*/React.createElement("span", {
    className: classNames__default['default'](style$V.icon, style$V.trailing)
  }, trailing)), (error || helperText) && /*#__PURE__*/React.createElement(FormControlHelperText, {
    id: helperId
  }, error && /*#__PURE__*/React.createElement(FormControlError, null, error), !error && /*#__PURE__*/React.createElement("span", null, helperText)));
});
TextField.displayName = "TextField";

var dateFormatLocaleMap = {
  "af-ZA": "yyyy/MM/dd",
  "am-ET": "d/M/yyyy",
  "ar-AE": "dd/MM/yyyy",
  "ar-BH": "dd/MM/yyyy",
  "ar-DZ": "dd-MM-yyyy",
  "ar-EG": "dd/MM/yyyy",
  "ar-IQ": "dd/MM/yyyy",
  "ar-JO": "dd/MM/yyyy",
  "ar-KW": "dd/MM/yyyy",
  "ar-LB": "dd/MM/yyyy",
  "ar-LY": "dd/MM/yyyy",
  "ar-MA": "dd-MM-yyyy",
  "ar-OM": "dd/MM/yyyy",
  "ar-QA": "dd/MM/yyyy",
  "ar-SA": "dd/MM/yy",
  "ar-SY": "dd/MM/yyyy",
  "ar-TN": "dd-MM-yyyy",
  "ar-YE": "dd/MM/yyyy",
  "arn-CL": "dd-MM-yyyy",
  "as-IN": "dd-MM-yyyy",
  "az-Cyrl-AZ": "dd.MM.yyyy",
  "az-Latn-AZ": "dd.MM.yyyy",
  "ba-RU": "dd.MM.yy",
  "be-BY": "dd.MM.yyyy",
  "bg-BG": "dd.M.yyyy",
  "bn-BD": "dd-MM-yy",
  "bn-IN": "dd-MM-yy",
  "bo-CN": "yyyy/M/d",
  "br-FR": "dd/MM/yyyy",
  "bs-Cyrl-BA": "d.M.yyyy",
  "bs-Latn-BA": "d.M.yyyy",
  "ca-ES": "dd/MM/yyyy",
  "co-FR": "dd/MM/yyyy",
  "cs-CZ": "d.M.yyyy",
  "cy-GB": "dd/MM/yyyy",
  "da-DK": "dd-MM-yyyy",
  "de-AT": "dd.MM.yyyy",
  "de-CH": "dd.MM.yyyy",
  "de-DE": "dd.MM.yyyy",
  "de-LI": "dd.MM.yyyy",
  "de-LU": "dd.MM.yyyy",
  "dsb-DE": "d. M. yyyy",
  "dv-MV": "dd/MM/yy",
  "el-GR": "d/M/yyyy",
  "en-029": "MM/dd/yyyy",
  "en-AU": "d/MM/yyyy",
  "en-BZ": "dd/MM/yyyy",
  "en-CA": "dd/MM/yyyy",
  "en-GB": "dd/MM/yyyy",
  "en-IE": "dd/MM/yyyy",
  "en-IN": "dd-MM-yyyy",
  "en-JM": "dd/MM/yyyy",
  "en-MY": "d/M/yyyy",
  "en-NZ": "d/MM/yyyy",
  "en-PH": "M/d/yyyy",
  "en-SG": "d/M/yyyy",
  "en-TT": "dd/MM/yyyy",
  "en-US": "MM/dd/yyyy",
  "en-ZA": "yyyy/MM/dd",
  "en-ZW": "M/d/yyyy",
  "es-AR": "dd/MM/yyyy",
  "es-BO": "dd/MM/yyyy",
  "es-CL": "dd-MM-yyyy",
  "es-CO": "dd/MM/yyyy",
  "es-CR": "dd/MM/yyyy",
  "es-DO": "dd/MM/yyyy",
  "es-EC": "dd/MM/yyyy",
  "es-ES": "dd/MM/yyyy",
  "es-GT": "dd/MM/yyyy",
  "es-HN": "dd/MM/yyyy",
  "es-MX": "dd/MM/yyyy",
  "es-NI": "dd/MM/yyyy",
  "es-PA": "MM/dd/yyyy",
  "es-PE": "dd/MM/yyyy",
  "es-PR": "dd/MM/yyyy",
  "es-PY": "dd/MM/yyyy",
  "es-SV": "dd/MM/yyyy",
  "es-US": "M/d/yyyy",
  "es-UY": "dd/MM/yyyy",
  "es-VE": "dd/MM/yyyy",
  "et-EE": "d.MM.yyyy",
  "eu-ES": "yyyy/MM/dd",
  "fa-IR": "MM/dd/yyyy",
  "fi-FI": "d.M.yyyy",
  "fil-PH": "M/d/yyyy",
  "fo-FO": "dd-MM-yyyy",
  "fr-BE": "d/MM/yyyy",
  "fr-CA": "yyyy-MM-dd",
  "fr-CH": "dd.MM.yyyy",
  "fr-FR": "dd/MM/yyyy",
  "fr-LU": "dd/MM/yyyy",
  "fr-MC": "dd/MM/yyyy",
  "fy-NL": "d-M-yyyy",
  "ga-IE": "dd/MM/yyyy",
  "gd-GB": "dd/MM/yyyy",
  "gl-ES": "dd/MM/yy",
  "gsw-FR": "dd/MM/yyyy",
  "gu-IN": "dd-MM-yy",
  "ha-Latn-NG": "d/M/yyyy",
  "he-IL": "dd/MM/yyyy",
  "hi-IN": "dd-MM-yyyy",
  "hr-BA": "d.M.yyyy.",
  "hr-HR": "d.M.yyyy",
  "hsb-DE": "d. M. yyyy",
  "hu-HU": "yyyy. MM. dd.",
  "hy-AM": "dd.MM.yyyy",
  "id-ID": "dd/MM/yyyy",
  "ig-NG": "d/M/yyyy",
  "ii-CN": "yyyy/M/d",
  "is-IS": "d.M.yyyy",
  "it-CH": "dd.MM.yyyy",
  "it-IT": "dd/MM/yyyy",
  "iu-Cans-CA": "d/M/yyyy",
  "iu-Latn-CA": "d/MM/yyyy",
  "ja-JP": "yyyy/MM/dd",
  "ka-GE": "dd.MM.yyyy",
  "kk-KZ": "dd.MM.yyyy",
  "kl-GL": "dd-MM-yyyy",
  "km-KH": "yyyy-MM-dd",
  "kn-IN": "dd-MM-yy",
  "ko-KR": "yyyy-MM-dd",
  "kok-IN": "dd-MM-yyyy",
  "ky-KG": "dd.MM.yy",
  "lb-LU": "dd/MM/yyyy",
  "lo-LA": "dd/MM/yyyy",
  "lt-LT": "yyyy.MM.dd",
  "lv-LV": "yyyy.MM.dd.",
  "mi-NZ": "dd/MM/yyyy",
  "mk-MK": "dd.MM.yyyy",
  "ml-IN": "dd-MM-yy",
  "mn-MN": "yy.MM.dd",
  "mn-Mong-CN": "yyyy/M/d",
  "moh-CA": "M/d/yyyy",
  "mr-IN": "dd-MM-yyyy",
  "ms-BN": "dd/MM/yyyy",
  "ms-MY": "dd/MM/yyyy",
  "mt-MT": "dd/MM/yyyy",
  "nb-NO": "dd.MM.yyyy",
  "ne-NP": "M/d/yyyy",
  "nl-BE": "d/MM/yyyy",
  "nl-NL": "d-M-yyyy",
  "nn-NO": "dd.MM.yyyy",
  "nso-ZA": "yyyy/MM/dd",
  "oc-FR": "dd/MM/yyyy",
  "or-IN": "dd-MM-yy",
  "pa-IN": "dd-MM-yy",
  "pl-PL": "yyyy-MM-dd",
  "prs-AF": "dd/MM/yy",
  "ps-AF": "dd/MM/yy",
  "pt-BR": "d/M/yyyy",
  "pt-PT": "dd-MM-yyyy",
  "qut-GT": "dd/MM/yyyy",
  "quz-BO": "dd/MM/yyyy",
  "quz-EC": "dd/MM/yyyy",
  "quz-PE": "dd/MM/yyyy",
  "rm-CH": "dd/MM/yyyy",
  "ro-RO": "dd.MM.yyyy",
  "ru-RU": "dd.MM.yyyy",
  "rw-RW": "M/d/yyyy",
  "sa-IN": "dd-MM-yyyy",
  "sah-RU": "MM.dd.yyyy",
  "se-FI": "d.M.yyyy",
  "se-NO": "dd.MM.yyyy",
  "se-SE": "yyyy-MM-dd",
  "si-LK": "yyyy-MM-dd",
  "sk-SK": "d. M. yyyy",
  "sl-SI": "d.M.yyyy",
  "sma-NO": "dd.MM.yyyy",
  "sma-SE": "yyyy-MM-dd",
  "smj-NO": "dd.MM.yyyy",
  "smj-SE": "yyyy-MM-dd",
  "smn-FI": "d.M.yyyy",
  "sms-FI": "d.M.yyyy",
  "sq-AL": "yyyy-MM-dd",
  "sr-Cyrl-BA": "d.M.yyyy",
  "sr-Cyrl-CS": "d.M.yyyy",
  "sr-Cyrl-ME": "d.M.yyyy",
  "sr-Cyrl-RS": "d.M.yyyy",
  "sr-Latn-BA": "d.M.yyyy",
  "sr-Latn-CS": "d.M.yyyy",
  "sr-Latn-ME": "d.M.yyyy",
  "sr-Latn-RS": "d.M.yyyy",
  "sv-FI": "d.M.yyyy",
  "sv-SE": "yyyy-MM-dd",
  "sw-KE": "M/d/yyyy",
  "syr-SY": "dd/MM/yyyy",
  "ta-IN": "dd-MM-yyyy",
  "te-IN": "dd-MM-yy",
  "tg-Cyrl-TJ": "dd.MM.yy",
  "th-TH": "d/M/yyyy",
  "tk-TM": "dd.MM.yy",
  "tn-ZA": "yyyy/MM/dd",
  "tr-TR": "dd.MM.yyyy",
  "tt-RU": "dd.MM.yyyy",
  "tzm-Latn-DZ": "dd-MM-yyyy",
  "ug-CN": "yyyy-M-d",
  "uk-UA": "dd.MM.yyyy",
  "ur-PK": "dd/MM/yyyy",
  "uz-Cyrl-UZ": "dd.MM.yyyy",
  "uz-Latn-UZ": "dd/MM yyyy",
  "vi-VN": "dd/MM/yyyy",
  "wo-SN": "dd/MM/yyyy",
  "xh-ZA": "yyyy/MM/dd",
  "yo-NG": "d/M/yyyy",
  "zh-CN": "yyyy/M/d",
  "zh-HK": "d/M/yyyy",
  "zh-MO": "d/M/yyyy",
  "zh-SG": "d/M/yyyy",
  "zh-TW": "yyyy/M/d",
  "zu-ZA": "yyyy/MM/dd"
};

var INVALID_DATE = "invalid date";
var getTimeZoneAbbr = () => {
  var timeZoneAbbr = "";

  try {
    var dateStr = new Date().toTimeString();
    timeZoneAbbr = dateStr.match(/[A-Z](?!.*[(])/g).join("");
  } catch (e) {
    // istanbul ignore next
    timeZoneAbbr = "CST";
  }

  return timeZoneAbbr;
};
var formatToLocalDate = (date, locale) => {
  // istanbul ignore next
  if (!date) {
    console.log(INVALID_DATE, date);
    return "";
  }

  var dateFormat = getLocaleDateStringFormat(locale);
  var dateToFormat = date; // istanbul ignore next

  if (Object.prototype.toString.call(date) !== "[object Date]") {
    var localDate = tryParseDate(date);

    if (!localDate) {
      return "";
    }

    dateToFormat = new Date(localDate.getUTCFullYear(), localDate.getUTCMonth(), localDate.getUTCDate());
  }

  return dateFnsTz.format(dateToFormat, dateFormat);
};
var getLocaleDateStringFormat = userLocale => {
  // istanbul ignore next
  var locale = userLocale || navigator.language || "en-US"; // istanbul ignore next

  return dateFormatLocaleMap[locale] || "MM/dd/yyyy";
};

var tryParseDate = date => {
  try {
    var parsedValue = new Date(date);

    if (isNaN(parsedValue.getDate())) {
      throw INVALID_DATE;
    }

    return parsedValue;
  } catch (ex) {
    console.log(INVALID_DATE, ex);
  }
};

var MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

var style$W = {"closeIcon":"DatePicker-module_closeIcon__1VthY","datepicker":"DatePicker-module_datepicker__3kXqS","datepickerHeader":"DatePicker-module_datepickerHeader__YOXgP","datepicker-range":"DatePicker-module_datepicker-range__2X3Fy","datepickerSeperator":"DatePicker-module_datepickerSeperator__2AVuP","react-datepicker-time__input":"DatePicker-module_react-datepicker-time__input__3Kwm6","datepickerTime":"DatePicker-module_datepickerTime__f0RL3","datepickeTimezone":"DatePicker-module_datepickeTimezone__iGPt4","datepickerRange":"DatePicker-module_datepickerRange__3zJwe","react-datepicker__input-container":"DatePicker-module_react-datepicker__input-container__1jVzI","datepickerCalRange":"DatePicker-module_datepickerCalRange__2mwiF","datepicker-seperator":"DatePicker-module_datepicker-seperator__Z8sgf","react-datepicker-popper":"DatePicker-module_react-datepicker-popper__3SRs5","datepickerCal":"DatePicker-module_datepickerCal__1yRfD","datepickerCal-time-input-enabled":"DatePicker-module_datepickerCal-time-input-enabled__3m32K","datepickerActions":"DatePicker-module_datepickerActions__33FvN","datepicker-clear-action":"DatePicker-module_datepicker-clear-action__zycfu","button":"DatePicker-module_button__XAEdS","datepickerActionsCta":"DatePicker-module_datepickerActionsCta__1pcg8","datepickerActionsClear":"DatePicker-module_datepickerActionsClear__2sVkP","datepickerDays":"DatePicker-module_datepickerDays__BNIC5","react-datepicker__day-name":"DatePicker-module_react-datepicker__day-name__3u2oT","datePickerHeader":"DatePicker-module_datePickerHeader__2_oX1","calendarHeaderActionsLeft":"DatePicker-module_calendarHeaderActionsLeft__2HmyF","calendarHeaderActionsRight":"DatePicker-module_calendarHeaderActionsRight__PGAse","headerBtn":"DatePicker-module_headerBtn__3MeaV"};

var selectedDate = null;
/* istanbul ignore next */

var noop = () => {};

var DatePicker = ({
  className = "",
  date = null,
  // istanbul ignore next
  dateFormat = "",
  disabled = false,
  errorText = "",
  id,
  label,
  minDate,
  maxDate,
  placement,
  onCalendarClose,
  onCalendarOpen,
  onChange,
  onClear
}) => {
  var [startDate, setStartDate] = React.useState(date); // Maintains a snap of startDate to enable cancel click

  var [startDateSnap, setStartDateSnap] = React.useState(date);
  var [showMonthYearPicker, setShowMonthYearPicker] = React.useState(false);
  var [inMonthSelection, setInMonthSelection] = React.useState(false);
  var datepickerRef = React.useRef(null);
  var timezoneAbbr = getTimeZoneAbbr();
  var ref = /*#__PURE__*/React.createRef();
  dateFormat = getLocaleDateStringFormat();
  React.useEffect(() => {
    setStartDate(date);
  }, [date]);
  /**
   * Date change handler
   * @param e Event object
   */

  function handleOnChange(date) {
    setStartDate(date);
    selectedDate = date;

    if (showMonthYearPicker) {
      setShowMonthYearPicker(false);
    }

    if (!inMonthSelection) {
      onChange && onChange(date);
      selectDate();
    }

    setInMonthSelection(false);
  }
  /**
   * Clear selected date
   * @param e Event object
   */


  function clearDate() {
    setStartDate(null);
    selectedDate = null; // istanbul ignore next

    onClear && onClear();
  }
  /**
   * Return selected date/time on Apply
   * @param none
   */


  function selectDate() {
    setStartDateSnap(selectedDate);
    onChange && onChange(selectedDate);
    datepickerRef.setOpen(false);
  }

  var getCalendarHeader = date => {
    var month = date.getMonth();
    return "".concat(MONTHS[month], " ").concat(date.getFullYear());
  };
  /**
   * Date custom input
   * @param obj Date object
   */


  var handleMonthClick = () => {
    setInMonthSelection(true);
    setShowMonthYearPicker(!showMonthYearPicker);
  };

  var DateInput = /*#__PURE__*/React.forwardRef((Obj, ref) => {
    var {
      value,
      onClick
    } = Obj;

    var handleClick = e => {
      e.preventDefault();
      e.stopPropagation();
      onClick && onClick(e);
    };

    var endIcon = value && datepickerRef && datepickerRef.isCalendarOpen && datepickerRef.isCalendarOpen() ? /*#__PURE__*/React__default['default'].createElement("span", {
      "aria-label": "close-calendar",
      role: "button",
      onClick: clearDate
    }, /*#__PURE__*/React__default['default'].createElement(WrappedIcon$9, {
      className: classNames__default['default'](style$W.closeIcon),
      size: "medium"
    })) : /*#__PURE__*/React__default['default'].createElement("span", {
      "aria-label": "open-calendar",
      role: "button",
      onClick: handleClick
    }, /*#__PURE__*/React__default['default'].createElement(WrappedIcon$1, {
      size: "medium",
      onClick: handleClick
    }));
    return /*#__PURE__*/React__default['default'].createElement(TextField, {
      className: classNames__default['default'](style$W.datepickerInput),
      disabled: disabled,
      trailing: endIcon,
      error: errorText,
      id: id,
      label: label,
      value: value,
      onChange: noop,
      onClick: handleClick,
      "data-testid": "date-picker-input"
    });
  });
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](style$W.datepicker, className)
  }, /*#__PURE__*/React__default['default'].createElement(DateCalendar__default['default'], {
    ref: r => datepickerRef = r,
    renderCustomHeader: ({
      date,
      decreaseMonth,
      increaseMonth,
      prevMonthButtonDisabled,
      nextMonthButtonDisabled
    }) => /*#__PURE__*/React__default['default'].createElement("div", {
      className: classNames__default['default'](style$W.datepickerHeader)
    }, /*#__PURE__*/React__default['default'].createElement("span", {
      "aria-label": "decrease-month",
      role: "button",
      onClick: () => !prevMonthButtonDisabled && decreaseMonth()
    }, /*#__PURE__*/React__default['default'].createElement(WrappedIcon$6, {
      size: "small"
    })), /*#__PURE__*/React__default['default'].createElement(Button, {
      variant: "tertiary",
      onClick: handleMonthClick
    }, getCalendarHeader(date)), /*#__PURE__*/React__default['default'].createElement("span", {
      "aria-label": "increase-month",
      role: "button",
      onClick: () => !nextMonthButtonDisabled && increaseMonth()
    }, /*#__PURE__*/React__default['default'].createElement(WrappedIcon$7, {
      size: "small"
    }))),
    calendarClassName: classNames__default['default'](style$W.datepickerCal),
    dateFormat: dateFormat,
    adjustDateOnChange: true,
    disabledKeyboardNavigation: true,
    selected: startDate,
    showPopperArrow: false,
    shouldCloseOnSelect: false,
    onCalendarClose: onCalendarClose,
    onCalendarOpen: onCalendarOpen,
    onChange: handleOnChange,
    customInput: /*#__PURE__*/React__default['default'].createElement(DateInput, {
      ref: ref
    }),
    placeholderText: label,
    minDate: minDate,
    popperPlacement: placement,
    showMonthYearPicker: showMonthYearPicker,
    showFullMonthYearPicker: showMonthYearPicker,
    maxDate: maxDate
  }));
};
DatePicker.defaultProps = {
  placement: "bottom"
};

var style$X = {"datepicker":"DateRangePicker-module_datepicker__1XtCs","datepickerHeader":"DateRangePicker-module_datepickerHeader__1EsJz","datePickerFooter":"DateRangePicker-module_datePickerFooter__1LnwI","datePickerFooterAction":"DateRangePicker-module_datePickerFooterAction__3x6yf","datePickerWrapper":"DateRangePicker-module_datePickerWrapper__HfeRi","datePickerWrapperAction":"DateRangePicker-module_datePickerWrapperAction__1Ifxl","datePickerInputWrapper":"DateRangePicker-module_datePickerInputWrapper__19OBJ","dateSeparator":"DateRangePicker-module_dateSeparator__24bAu","datepickerInput":"DateRangePicker-module_datepickerInput__xihd0"};

/* istanbul ignore next */
var noop$1 = () => {};

var DateRangePicker = ({
  className = "",
  dateFormat = "",
  disabled = false,
  errorText = "",
  id,
  startLabel = "Start date",
  endLabel = "End date",
  minDate,
  maxDate,
  placement,
  onCalendarClose,
  onApplyDate,
  onCancelDate,
  onCalendarOpen,
  onChange,
  onClear,
  endDate,
  startDate,
  inline = false
}) => {
  var [startDateVal, setStartDate] = React.useState(startDate);
  var [endDateVal, setEndDate] = React.useState(endDate);
  var [startDateSnap, setStartDateSnap] = React.useState(startDate);
  var [endDateSnap, setEndDateSnap] = React.useState(endDate);
  var [isInputActive, setInputActive] = React.useState(inline);
  var [handleChangeFromArrow, setHandleChangeFromArrow] = React.useState(false);
  dateFormat = getLocaleDateStringFormat();
  React.useEffect(() => {
    setStartDate(startDate);
  }, [startDate]);
  React.useEffect(() => {
    setEndDate(endDate);
  }, [endDate]);
  /**
   * Date change handler
   * @param e Event object
   */

  function handleOnChange(date) {
    if (handleChangeFromArrow) {
      setHandleChangeFromArrow(false);
      return;
    }

    var [startDate, endDate] = date;
    setStartDate(startDate);
    setEndDate(endDate);
    onChange && onChange(date);
  }
  /**
   * Clear selected date
   * @param e Event object
   */


  function clearDate() {
    setStartDate(undefined);
    setEndDate(undefined);
    onClear && onClear();
  }
  /**
   * Reset to original value
   * @param e Event object
   */


  function cancelDate() {
    setStartDate(startDateSnap);
    setEndDate(endDateSnap);
    setInputActive(inline || false);
    onCancelDate && onCancelDate([startDateSnap, endDateSnap]);
  }
  /**
   * Reset to original value
   * @param e Event object
   */


  function applyDate() {
    setStartDateSnap(startDateVal);
    setEndDateSnap(endDateVal);
    setInputActive(inline || false);
    onApplyDate && onApplyDate([startDateVal, endDateVal]);
  }
  /**
   * Custom Header
   */


  function getCalendarHeader(date) {
    var month = date.getMonth();
    return "".concat(MONTHS[month], " ").concat(date.getFullYear());
  }
  /**
   * On focus of input box
   */


  function onInputFocus() {
    setInputActive(true);
    onCalendarOpen && onCalendarOpen();
  }
  /**
   * on clicking next and previous icon for month change
   */


  function changeMonth(changeFunction) {
    setHandleChangeFromArrow(true);
    changeFunction();
  }

  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](style$X.datePickerWrapper, className)
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](style$X.datePickerInputWrapper, className)
  }, /*#__PURE__*/React__default['default'].createElement(TextField, {
    className: classNames__default['default'](style$X.datepickerInput),
    disabled: disabled,
    error: errorText,
    id: "".concat(id, "-input-start"),
    label: startLabel,
    value: formatToLocalDate(startDateVal || ""),
    onChange: noop$1,
    "data-testid": "".concat(id, "-input-start-test"),
    onFocus: onInputFocus
  }), /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](style$X.dateSeparator, className)
  }, "\u2013"), /*#__PURE__*/React__default['default'].createElement(TextField, {
    className: classNames__default['default'](style$X.datepickerInput),
    disabled: disabled,
    error: errorText,
    id: "".concat(id, "-input-end"),
    label: endLabel,
    value: formatToLocalDate(endDateVal || ""),
    onChange: noop$1,
    "data-testid": "".concat(id, "-input-end-test"),
    onFocus: onInputFocus
  })), isInputActive ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: inline ? "" : classNames__default['default'](style$X.datePickerWrapperAction, className)
  }, /*#__PURE__*/React__default['default'].createElement(Divider, null), /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](style$X.datepicker, className)
  }, /*#__PURE__*/React__default['default'].createElement(DateCalendar__default['default'], {
    renderCustomHeader: ({
      monthDate,
      decreaseMonth,
      increaseMonth,
      prevMonthButtonDisabled,
      nextMonthButtonDisabled,
      customHeaderCount
    }) => /*#__PURE__*/React__default['default'].createElement("div", {
      className: classNames__default['default'](style$X.datepickerHeader),
      style: {
        justifyContent: customHeaderCount === 0 ? "flex-start" : "flex-end"
      }
    }, /*#__PURE__*/React__default['default'].createElement("span", {
      "aria-label": "decrease-month",
      role: "button",
      onClick: () => !prevMonthButtonDisabled && changeMonth(decreaseMonth)
    }, customHeaderCount === 0 ? /*#__PURE__*/React__default['default'].createElement(WrappedIcon$6, {
      size: "small"
    }) : null), /*#__PURE__*/React__default['default'].createElement(Button, {
      variant: "tertiary",
      size: "medium",
      onClick: noop$1
    }, getCalendarHeader(monthDate)), /*#__PURE__*/React__default['default'].createElement("span", {
      "aria-label": "increase-month",
      role: "button",
      onClick: () => {
        !nextMonthButtonDisabled && changeMonth(increaseMonth);
      }
    }, customHeaderCount === 1 ? /*#__PURE__*/React__default['default'].createElement(WrappedIcon$7, {
      size: "small"
    }) : null)),
    selected: startDateVal,
    onChange: handleOnChange,
    startDate: startDateVal,
    endDate: endDateVal,
    monthsShown: 2,
    selectsRange: true,
    inline: true,
    calendarClassName: classNames__default['default'](style$X.datepickerCal),
    dateFormat: dateFormat,
    adjustDateOnChange: true,
    disabledKeyboardNavigation: true,
    showPopperArrow: false,
    shouldCloseOnSelect: false,
    onCalendarClose: onCalendarClose,
    onCalendarOpen: onCalendarOpen,
    popperPlacement: placement,
    minDate: minDate,
    maxDate: maxDate
  })), /*#__PURE__*/React__default['default'].createElement(Divider, null), /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](style$X.datePickerFooter, className)
  }, /*#__PURE__*/React__default['default'].createElement(Button, {
    variant: "tertiary",
    size: "medium",
    onClick: clearDate
  }, "Clear"), /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](style$X.datePickerFooterAction, className)
  }, /*#__PURE__*/React__default['default'].createElement(Button, {
    variant: "tertiary",
    size: "medium",
    onClick: cancelDate
  }, "Cancel"), /*#__PURE__*/React__default['default'].createElement(Button, {
    variant: "primary",
    size: "medium",
    disabled: !(startDateVal && endDateVal),
    onClick: applyDate
  }, "Apply")))) : null);
};
DateRangePicker.defaultProps = {
  placement: "bottom"
};

exports.Alert = Alert;
exports.BOGLE_BASELINE_RATIO = BOGLE_BASELINE_RATIO;
exports.Badge = Badge;
exports.Banner = Banner;
exports.BasePopover = BasePopover;
exports.Body = Body;
exports.Box = Box;
exports.Breadcrumb = Breadcrumb;
exports.BreadcrumbItem = BreadcrumbItem;
exports.Button = Button;
exports.ButtonGroup = ButtonGroup;
exports.Caption = Caption;
exports.Card = Card;
exports.Checkbox = Checkbox;
exports.Chip = Chip;
exports.ChipGroup = ChipGroup;
exports.Collapse = Collapse;
exports.Container = Container;
exports.DatePicker = DatePicker;
exports.DateRangePicker = DateRangePicker;
exports.Display = Display;
exports.Divider = Divider;
exports.Dropdown = Dropdown;
exports.Flag = Flag;
exports.FocusTrap = FocusTrap;
exports.FormGroup = FormGroup;
exports.Grid = Grid;
exports.GridColumn = GridColumn;
exports.Heading = Heading;
exports.LineClamp = LineClamp;
exports.Link = Link;
exports.Modal = Modal;
exports.Options = Options;
exports.PageTitle = PageTitle;
exports.Panel = Panel;
exports.PanelCloseButton = OverlayCloseButton;
exports.Popover = Popover;
exports.ProgressIndicator = ProgressIndicator;
exports.ProgressTracker = ProgressTracker;
exports.ProgressTrackerItem = ProgressTrackerItem;
exports.Radio = Radio;
exports.Search = Search;
exports.Select = Select;
exports.SelectFilter = SelectFilter;
exports.SnackbarContext = SnackbarContext;
exports.SnackbarProvider = SnackbarProvider;
exports.Spinner = Spinner;
exports.StatefullPopover = StatefullPopover;
exports.Subheading = Subheading;
exports.Switch = Switch;
exports.Tab = Tab;
exports.TabGroup = TabGroup;
exports.Tag = Tag;
exports.TextArea = TextArea;
exports.TextField = TextField;
exports.Tooltip = Tooltip;
exports.useLockBodyScroll = useLockBodyScroll;
exports.useOnClickOutside = useOnClickOutside;
exports.useOnKeyDown = useOnKeyDown;
exports.useSnackbar = useSnackbar;
