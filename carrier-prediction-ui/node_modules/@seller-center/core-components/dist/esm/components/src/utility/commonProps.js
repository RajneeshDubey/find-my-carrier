import { objectSpread2 as _objectSpread2 } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import classNames from 'classnames';

/**
 * Tranform common props to properties for use with a HTMLElement.
 *
 * @todo Deprecate `className` and `style` in the next major release.
 */

/* eslint-disable complexity */
var applyCommonProps = (props, Component, isWarnDisabled = false) => {
  /* eslint-disable no-console */

  /* istanbul ignore if */
  if (process.env.NODE_ENV === "development") {
    if (!isWarnDisabled) {
      if (props.className) {
        console.warn("".concat(Component.displayName || Component.name || "Unknown", ".className property will be deprecated in the next major version. Please use the \"UNSAFE_className\" property."));
      }

      if (props.style) {
        console.warn("".concat(Component.displayName || Component.name || "Unknown", ".style property will be deprecated in the next major version. Please use the \"UNSAFE_style\" property."));
      }
    }
  }
  /* eslint-enable no-console */


  var appliedProps = {};

  for (var key in props) {
    if (props.hasOwnProperty(key)) {
      var value = props[key];

      if (key === "UNSAFE_className" || key === "className") {
        // @ts-ignore
        appliedProps.className = classNames(appliedProps.className, value);
      } else if (key === "UNSAFE_style" || key === "style") {
        appliedProps.style = appliedProps.style ? _objectSpread2(_objectSpread2({}, appliedProps.style), value) : value;
      } else {
        appliedProps[key] = value;
      }
    }
  }

  return appliedProps;
};

export { applyCommonProps };
