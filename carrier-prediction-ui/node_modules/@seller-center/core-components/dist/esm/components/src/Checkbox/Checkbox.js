import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { forwardRef, createElement, Fragment } from 'react';
import classNames from 'classnames';
import invariant from '../utility/invariant.js';
import getNodeId from '../utility/getNodeId.js';
import style from './Checkbox.module.scss.js';

var Checkbox = /*#__PURE__*/forwardRef(( // props:CheckboxProps
_ref, ref) => {
  var {
    a11yLabelledBy,
    checkboxProps = {},
    checked = false,
    className,
    disabled = false,
    id: initialId,
    label,
    name,
    onChange,
    value
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["a11yLabelledBy", "checkboxProps", "checked", "className", "disabled", "id", "label", "name", "onChange", "value"]);

  // const {
  //   a11yLabelledBy,
  //   checkboxProps = {},
  //   checked = false,
  //   className,
  //   disabled = false,
  //   id: initialId,
  //   label,
  //   name,
  //   onChange,
  //   value,
  //   ...rest
  // } = props;
  var labelCount = (label ? 1 : 0) + (a11yLabelledBy ? 1 : 0) === 1;
  invariant(labelCount, "`Checkbox` accessibility violation. `Checkbox` requires a `label` OR an `a11yLabelledBy`.");

  var {
    className: checkboxClassName
  } = checkboxProps,
      checkboxRest = _objectWithoutProperties(checkboxProps, ["className"]);

  var id = getNodeId("checkbox", initialId);
  var input = /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement("input", _extends({
    checked: checked,
    className: classNames(style.input, checkboxClassName),
    disabled: disabled,
    id: id,
    name: name,
    onChange: onChange,
    ref: ref,
    type: "checkbox"
  }, a11yLabelledBy && {
    "aria-labelledby": a11yLabelledBy
  }, value && {
    value
  }, checkboxRest)), /*#__PURE__*/createElement("i", {
    className: classNames(style.checkbox, !!label && style.hasLabel)
  }));
  return /*#__PURE__*/createElement("label", _extends({
    className: classNames(style.label, checked && style.checked, disabled && style.isDisabled, className),
    htmlFor: id
  }, rest), input, label);
});
Checkbox.displayName = "Checkbox";

export { Checkbox };
