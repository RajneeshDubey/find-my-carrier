import { useRef, useEffect } from 'react';

// This file does not have 100% code coverage.
/**
 * Create and attach element to the body to be used for portal.
 *
 * @see {@link https://www.jayfreestone.com/writing/react-portals-with-hooks}
 *
 * @returns {React.Ref} modal
 */

var usePortal = (options = {}) => {
  var {
    a11yHidden = true
  } = options;
  var modal = useRef(null);
  var container = document.body;

  if (!modal.current) {
    modal.current = document.createElement("div");
  } // istanbul ignore next


  useEffect(() => {
    // istanbul ignore next
    if (!a11yHidden) {
      return () => undefined;
    } // We need to add `aria-hidden` to all children of <body>,
    // except for the modal. We .filter() the list to find only
    // <div>-like elements, ignoring <script>, <style>, etc.
    // We also don't want to affect any elements that may already
    // have `aria-hidden` set to true.


    var bodyChildren = Array.from(container.children).filter(child => child.innerHTML && [null, "false"].includes(child.getAttribute("aria-hidden")));
    bodyChildren.forEach(el => el.setAttribute("aria-hidden", "true"));
    return () => {
      bodyChildren.forEach(el => el.removeAttribute("aria-hidden"));
    };
  }, []);
  useEffect(() => {
    container.appendChild(modal.current);
    return () => {
      // istanbul ignore next
      if (!modal.current) {
        return;
      } // NOTE: IE 11 needs removeChild


      container.removeChild(modal.current);
    };
  }, []);
  return modal;
};

export { usePortal };
