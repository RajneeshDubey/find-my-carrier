import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { useRef, createElement } from 'react';
import classNames from 'classnames';
import { applyCommonProps } from '../utility/commonProps.js';
import invariant from '../utility/invariant.js';
import getNodeId from '../utility/getNodeId.js';
import { useLockBodyScroll } from '../utility/useLockBodyScroll.js';
import { useOnClickOutside } from '../utility/useOnClickOutside.js';
import { useOnKeyDown } from '../utility/useOnKeyDown.js';
import style from './ModalPortal.module.scss.js';
import { Overlay } from '../Overlay/Overlay.js';
import { OverlayCloseButton } from '../Overlay/OverlayCloseButton.js';
import { OverlayScrim } from '../Overlay/OverlayScrim.js';

var ModalPortal = props => {
  var _applyCommonProps = applyCommonProps(props, ModalPortal, true),
      {
    actions,
    children,
    closeButtonProps,
    onClose,
    size = "small",
    title
  } = _applyCommonProps,
      rest = _objectWithoutProperties(_applyCommonProps, ["actions", "children", "closeButtonProps", "onClose", "size", "title"]);

  invariant(!!title, "Required property `title` not provided.");
  var modalRef = useRef(null);
  var modalContentRef = useRef(null);
  var titleId = getNodeId("modalTitle"); // NOTE: On Safari iOS, body-scroll-lock locks scrolling on all elements
  // except for the passed in ref. Need to pass the element that can scroll.
  // https://github.com/reakit/reakit/issues/469#issuecomment-549013422

  useLockBodyScroll(modalContentRef);
  useOnClickOutside(modalRef, onClose);
  useOnKeyDown(["Esc", "Escape"], onClose);
  return /*#__PURE__*/createElement(Overlay, rest, /*#__PURE__*/createElement("div", {
    className: style.container
  }, /*#__PURE__*/createElement("div", {
    "aria-labelledby": titleId,
    className: classNames(style.modal, size === "large" && style.large, size === "medium" && style.medium, size === "small" && style.small, size === "xlarge" && style.xlarge),
    ref: modalRef,
    role: "dialog"
  }, /*#__PURE__*/createElement("div", {
    className: style.header
  }, /*#__PURE__*/createElement(OverlayCloseButton, _extends({
    "aria-label": "Close dialog",
    onClick: onClose
  }, closeButtonProps)), /*#__PURE__*/createElement("h2", {
    className: style.title,
    id: titleId
  }, title)), /*#__PURE__*/createElement("div", {
    className: style.content,
    ref: modalContentRef
  }, /*#__PURE__*/createElement("div", {
    className: style.contentInner
  }, children)), actions &&
  /*#__PURE__*/
  // NOTE: Safari needs a wrapping block element, otherwise a flex container
  // renders with no height.
  createElement("div", {
    className: style.actions
  }, actions))), /*#__PURE__*/createElement(OverlayScrim, null));
};

export { ModalPortal };
