import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { Children, createElement } from 'react';
import invariant from '../utility/invariant.js';
import style from './Breadcrumb.module.scss.js';

var Breadcrumb = props => {
  var {
    children,
    className
  } = props,
      rest = _objectWithoutProperties(props, ["children", "className"]);

  var breadcrumbItems = Children.toArray(children);
  var hasBreadcrumbItems = breadcrumbItems.length > 0;
  invariant(hasBreadcrumbItems, "Invalid prop `children` supplied to `Breadcrumb`.");

  if (!hasBreadcrumbItems) {
    return null;
  }

  return /*#__PURE__*/createElement("nav", _extends({
    "aria-label": "breadcrumb",
    className: className
  }, rest), /*#__PURE__*/createElement("ol", {
    className: style.breadcrumb,
    itemScope: true,
    itemType: "//schema.org/BreadcrumbList"
  }, Children.map(breadcrumbItems, (child, index) => {
    return /*#__PURE__*/createElement("li", {
      className: style.item,
      itemProp: "itemListElement",
      itemScope: true,
      itemType: "//schema.org/ListItem"
    }, child, index !== breadcrumbItems.length - 1 && /*#__PURE__*/createElement("span", {
      "aria-hidden": true,
      className: style.separator
    }, "/"), /*#__PURE__*/createElement("meta", {
      itemProp: "position",
      content: "".concat(index + 1)
    }));
  })));
};

export { Breadcrumb };
