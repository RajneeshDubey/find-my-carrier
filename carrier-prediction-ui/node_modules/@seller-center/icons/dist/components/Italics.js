"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Italics = void 0;

var React = _interopRequireWildcard(require("react"));

var _withIcon = require("../IconWrapper/withIcon");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function SvgItalics(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, props), /*#__PURE__*/React.createElement("g", {
    fill: "none",
    fillRule: "evenodd"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M0 0h16v16H0z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M9.383 13v-.406c-.485-.042-.8-.1-.945-.172-.146-.073-.22-.245-.22-.516 0-.047.005-.097.012-.152.008-.055.017-.108.028-.16l.125-.555 1.969-7.18c.12-.442.266-.731.441-.867.174-.135.457-.229.848-.281v-.414H6.883v.414c.479.042.794.098.945.168.151.07.227.24.227.512 0 .104-.015.225-.043.363a7.742 7.742 0 0 1-.13.512l-1.96 7.18c-.12.437-.271.726-.453.867-.183.14-.464.234-.844.28V13h4.758z",
    fill: "currentColor",
    fillRule: "nonzero"
  })));
}

var WrappedIcon = (0, _withIcon.withIcon)(SvgItalics);
exports.Italics = WrappedIcon;