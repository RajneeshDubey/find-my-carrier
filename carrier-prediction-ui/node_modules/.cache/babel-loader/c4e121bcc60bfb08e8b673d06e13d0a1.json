{"ast":null,"code":"import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport { createElement } from 'react';\nimport classNames from 'classnames';\nimport invariant from '../utility/invariant.js';\nimport style from './Divider.module.scss.js';\n\nvar Divider = _ref => {\n  var {\n    \"aria-label\": ariaLabel,\n    className,\n    title\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"aria-label\", \"className\", \"title\"]); // const { \"aria-label\": ariaLabel, className, title, ...rest } = props;\n  // Convert boolean strings to pure booleans. !bool can have unintended side-effects.\n  // `ariaHidden` should default to `true` unless overridden.\n\n\n  var ariaHidden = !(rest[\"aria-hidden\"] === \"false\" || rest[\"aria-hidden\"] === false);\n  invariant(!!(ariaHidden || !ariaHidden && (ariaLabel !== undefined || title !== undefined)), \"`Divider` accessibility violation. `Divider` requires an accessible label if `aria-hidden` is false.\");\n  return /*#__PURE__*/createElement(\"hr\", _extends({\n    \"aria-hidden\": ariaHidden,\n    className: classNames(style.divider, className)\n  }, title && {\n    title\n  }, rest));\n};\n\nexport { Divider };","map":{"version":3,"names":["objectWithoutProperties","_objectWithoutProperties","extends","_extends","createElement","classNames","invariant","style","Divider","_ref","ariaLabel","className","title","rest","ariaHidden","undefined","divider"],"sources":["/Users/r0d025j/Documents/IMD/GT22/find-my-carrier/carrier-prediction-ui/node_modules/@seller-center/core-components/dist/esm/components/src/Divider/Divider.js"],"sourcesContent":["import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport { createElement } from 'react';\nimport classNames from 'classnames';\nimport invariant from '../utility/invariant.js';\nimport style from './Divider.module.scss.js';\n\nvar Divider = _ref => {\n  var {\n    \"aria-label\": ariaLabel,\n    className,\n    title\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"aria-label\", \"className\", \"title\"]);\n\n  // const { \"aria-label\": ariaLabel, className, title, ...rest } = props;\n  // Convert boolean strings to pure booleans. !bool can have unintended side-effects.\n  // `ariaHidden` should default to `true` unless overridden.\n  var ariaHidden = !(rest[\"aria-hidden\"] === \"false\" || rest[\"aria-hidden\"] === false);\n  invariant(!!(ariaHidden || !ariaHidden && (ariaLabel !== undefined || title !== undefined)), \"`Divider` accessibility violation. `Divider` requires an accessible label if `aria-hidden` is false.\");\n  return /*#__PURE__*/createElement(\"hr\", _extends({\n    \"aria-hidden\": ariaHidden,\n    className: classNames(style.divider, className)\n  }, title && {\n    title\n  }, rest));\n};\n\nexport { Divider };\n"],"mappings":"AAAA,SAASA,uBAAuB,IAAIC,wBAApC,EAA8DC,OAAO,IAAIC,QAAzE,QAAyF,gDAAzF;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;AAEA,IAAIC,OAAO,GAAGC,IAAI,IAAI;EACpB,IAAI;IACF,cAAcC,SADZ;IAEFC,SAFE;IAGFC;EAHE,IAIAH,IAJJ;EAAA,IAKII,IAAI,GAAGZ,wBAAwB,CAACQ,IAAD,EAAO,CAAC,YAAD,EAAe,WAAf,EAA4B,OAA5B,CAAP,CALnC,CADoB,CAQpB;EACA;EACA;;;EACA,IAAIK,UAAU,GAAG,EAAED,IAAI,CAAC,aAAD,CAAJ,KAAwB,OAAxB,IAAmCA,IAAI,CAAC,aAAD,CAAJ,KAAwB,KAA7D,CAAjB;EACAP,SAAS,CAAC,CAAC,EAAEQ,UAAU,IAAI,CAACA,UAAD,KAAgBJ,SAAS,KAAKK,SAAd,IAA2BH,KAAK,KAAKG,SAArD,CAAhB,CAAF,EAAoF,sGAApF,CAAT;EACA,OAAO,aAAaX,aAAa,CAAC,IAAD,EAAOD,QAAQ,CAAC;IAC/C,eAAeW,UADgC;IAE/CH,SAAS,EAAEN,UAAU,CAACE,KAAK,CAACS,OAAP,EAAgBL,SAAhB;EAF0B,CAAD,EAG7CC,KAAK,IAAI;IACVA;EADU,CAHoC,EAK7CC,IAL6C,CAAf,CAAjC;AAMD,CAnBD;;AAqBA,SAASL,OAAT"},"metadata":{},"sourceType":"module"}