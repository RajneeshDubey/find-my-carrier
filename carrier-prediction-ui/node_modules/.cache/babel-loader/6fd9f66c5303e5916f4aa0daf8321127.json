{"ast":null,"code":"import { useState, useEffect } from 'react';\n/**\n * React hook for storing the focused element when a component mounts then returning the focus to that component when the component unmounts.\n *\n * @example\n * const MyComponent = () => {\n *    useReturnFocus();\n *    return <div>Content</div>\n *  }\n *  // Will return focus to the element that had focus when this component mounted\n *\n * @param {array} conditions — An array containing variables that when changed will rerun the effect.\n * @param {boolean} disable —  When true, will prevent focus from returning to the previously focused element.\n * @returns {void}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar useReturnFocus = function () {\n  let conditions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let disable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var [previouslyFocusedElement, setPreviouslyFocusedElement] = useState(null);\n  useEffect(() => {\n    /* istanbul ignore else */\n    if (typeof document !== \"undefined\") {\n      var {\n        activeElement\n      } = document;\n      /* istanbul ignore else */\n\n      if (activeElement instanceof HTMLElement) {\n        setPreviouslyFocusedElement(activeElement);\n      }\n    }\n\n    return () => {\n      if (!disable) {\n        previouslyFocusedElement === null || previouslyFocusedElement === void 0 ? void 0 : previouslyFocusedElement.focus();\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disable, ...conditions]);\n};\n\nexport { useReturnFocus };","map":{"version":3,"names":["useState","useEffect","useReturnFocus","conditions","disable","previouslyFocusedElement","setPreviouslyFocusedElement","document","activeElement","HTMLElement","focus"],"sources":["/Users/r0d025j/Documents/IMD/GT22/find-my-carrier/carrier-prediction-ui/node_modules/@seller-center/core-components/dist/esm/components/src/utility/useReturnFocus.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * React hook for storing the focused element when a component mounts then returning the focus to that component when the component unmounts.\n *\n * @example\n * const MyComponent = () => {\n *    useReturnFocus();\n *    return <div>Content</div>\n *  }\n *  // Will return focus to the element that had focus when this component mounted\n *\n * @param {array} conditions — An array containing variables that when changed will rerun the effect.\n * @param {boolean} disable —  When true, will prevent focus from returning to the previously focused element.\n * @returns {void}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar useReturnFocus = (\n/* istanbul ignore next: default case */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconditions = [], disable = false) => {\n  var [previouslyFocusedElement, setPreviouslyFocusedElement] = useState(null);\n  useEffect(() => {\n    /* istanbul ignore else */\n    if (typeof document !== \"undefined\") {\n      var {\n        activeElement\n      } = document;\n      /* istanbul ignore else */\n\n      if (activeElement instanceof HTMLElement) {\n        setPreviouslyFocusedElement(activeElement);\n      }\n    }\n\n    return () => {\n      if (!disable) {\n        previouslyFocusedElement === null || previouslyFocusedElement === void 0 ? void 0 : previouslyFocusedElement.focus();\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disable, ...conditions]);\n};\n\nexport { useReturnFocus };\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAG,YAGgB;EAAA,IAArCC,UAAqC,uEAAxB,EAAwB;EAAA,IAApBC,OAAoB,uEAAV,KAAU;EACnC,IAAI,CAACC,wBAAD,EAA2BC,2BAA3B,IAA0DN,QAAQ,CAAC,IAAD,CAAtE;EACAC,SAAS,CAAC,MAAM;IACd;IACA,IAAI,OAAOM,QAAP,KAAoB,WAAxB,EAAqC;MACnC,IAAI;QACFC;MADE,IAEAD,QAFJ;MAGA;;MAEA,IAAIC,aAAa,YAAYC,WAA7B,EAA0C;QACxCH,2BAA2B,CAACE,aAAD,CAA3B;MACD;IACF;;IAED,OAAO,MAAM;MACX,IAAI,CAACJ,OAAL,EAAc;QACZC,wBAAwB,KAAK,IAA7B,IAAqCA,wBAAwB,KAAK,KAAK,CAAvE,GAA2E,KAAK,CAAhF,GAAoFA,wBAAwB,CAACK,KAAzB,EAApF;MACD;IACF,CAJD,CAbc,CAiBX;EACJ,CAlBQ,EAkBN,CAACN,OAAD,EAAU,GAAGD,UAAb,CAlBM,CAAT;AAmBD,CAxBD;;AA0BA,SAASD,cAAT"},"metadata":{},"sourceType":"module"}