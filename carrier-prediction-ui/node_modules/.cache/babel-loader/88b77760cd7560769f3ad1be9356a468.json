{"ast":null,"code":"import { useMemo } from 'react';\nimport generateId from '../utility/generateId.js';\n/**\n * A hook to create a no-conflict accessible id for DOM nodes.\n * @private\n *\n * @param {string} scope The scope used to generate a unique id\n * @param {string} [id] The custom id used to generate the node id\n * @returns {string} The generated id\n */\n\nvar useNodeId = (scope, id) => useMemo(() => {\n  if (id) {\n    return id;\n  }\n\n  return generateId(scope);\n}, [scope, id]);\n\nexport { useNodeId };","map":{"version":3,"names":["useMemo","generateId","useNodeId","scope","id"],"sources":["/Users/r0d025j/Documents/IMD/GT22/find-my-carrier/carrier-prediction-ui/node_modules/@seller-center/core-components/dist/esm/components/src/hooks/useNodeId.js"],"sourcesContent":["import { useMemo } from 'react';\nimport generateId from '../utility/generateId.js';\n\n/**\n * A hook to create a no-conflict accessible id for DOM nodes.\n * @private\n *\n * @param {string} scope The scope used to generate a unique id\n * @param {string} [id] The custom id used to generate the node id\n * @returns {string} The generated id\n */\n\nvar useNodeId = (scope, id) => useMemo(() => {\n  if (id) {\n    return id;\n  }\n\n  return generateId(scope);\n}, [scope, id]);\n\nexport { useNodeId };\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,SAAS,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAeJ,OAAO,CAAC,MAAM;EAC3C,IAAII,EAAJ,EAAQ;IACN,OAAOA,EAAP;EACD;;EAED,OAAOH,UAAU,CAACE,KAAD,CAAjB;AACD,CANqC,EAMnC,CAACA,KAAD,EAAQC,EAAR,CANmC,CAAtC;;AAQA,SAASF,SAAT"},"metadata":{},"sourceType":"module"}