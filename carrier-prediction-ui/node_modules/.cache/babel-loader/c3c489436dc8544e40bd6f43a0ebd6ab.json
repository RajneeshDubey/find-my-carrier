{"ast":null,"code":"import { useMemo } from 'react';\nimport generateId from './generateId.js';\n\nvar getNodeId = (scope, id) => {\n  if (id) {\n    return id;\n  }\n\n  return generateId(scope);\n};\n/**\n * A hook to create a no-conflict accessible id for DOM nodes.\n *\n * @param {string} scope — The scope used to generate a unique id.\n * @param {string} [id] — The custom id used to generate the node id.\n * @returns {string} — id\n */\n\n\nvar useNodeId = (scope, id) => {\n  return useMemo(() => {\n    return getNodeId(scope, id);\n  }, [scope, id]);\n};\n\nexport default useNodeId;","map":{"version":3,"names":["useMemo","generateId","getNodeId","scope","id","useNodeId"],"sources":["/Users/r0d025j/Documents/IMD/GT22/find-my-carrier/carrier-prediction-ui/node_modules/@seller-center/core-components/dist/esm/components/src/utility/useNodeId.js"],"sourcesContent":["import { useMemo } from 'react';\nimport generateId from './generateId.js';\n\nvar getNodeId = (scope, id) => {\n  if (id) {\n    return id;\n  }\n\n  return generateId(scope);\n};\n/**\n * A hook to create a no-conflict accessible id for DOM nodes.\n *\n * @param {string} scope — The scope used to generate a unique id.\n * @param {string} [id] — The custom id used to generate the node id.\n * @returns {string} — id\n */\n\n\nvar useNodeId = (scope, id) => {\n  return useMemo(() => {\n    return getNodeId(scope, id);\n  }, [scope, id]);\n};\n\nexport default useNodeId;\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,IAAIC,SAAS,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;EAC7B,IAAIA,EAAJ,EAAQ;IACN,OAAOA,EAAP;EACD;;EAED,OAAOH,UAAU,CAACE,KAAD,CAAjB;AACD,CAND;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIE,SAAS,GAAG,CAACF,KAAD,EAAQC,EAAR,KAAe;EAC7B,OAAOJ,OAAO,CAAC,MAAM;IACnB,OAAOE,SAAS,CAACC,KAAD,EAAQC,EAAR,CAAhB;EACD,CAFa,EAEX,CAACD,KAAD,EAAQC,EAAR,CAFW,CAAd;AAGD,CAJD;;AAMA,eAAeC,SAAf"},"metadata":{},"sourceType":"module"}