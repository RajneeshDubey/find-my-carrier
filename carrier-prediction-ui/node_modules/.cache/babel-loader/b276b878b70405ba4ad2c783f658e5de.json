{"ast":null,"code":"import { format } from 'date-fns-tz';\nimport { dateFormatLocaleMap } from './constants.js';\nexport * from 'date-fns';\nvar INVALID_DATE = \"invalid date\";\n\nvar getTimeZoneAbbr = () => {\n  var timeZoneAbbr = \"\";\n\n  try {\n    var dateStr = new Date().toTimeString();\n    timeZoneAbbr = dateStr.match(/[A-Z](?!.*[(])/g).join(\"\");\n  } catch (e) {\n    // istanbul ignore next\n    timeZoneAbbr = \"CST\";\n  }\n\n  return timeZoneAbbr;\n};\n\nvar formatToLocalDate = (date, locale) => {\n  // istanbul ignore next\n  if (!date) {\n    console.log(INVALID_DATE, date);\n    return \"\";\n  }\n\n  var dateFormat = getLocaleDateStringFormat(locale);\n  var dateToFormat = date; // istanbul ignore next\n\n  if (Object.prototype.toString.call(date) !== \"[object Date]\") {\n    var localDate = tryParseDate(date);\n\n    if (!localDate) {\n      return \"\";\n    }\n\n    dateToFormat = new Date(localDate.getUTCFullYear(), localDate.getUTCMonth(), localDate.getUTCDate());\n  }\n\n  return format(dateToFormat, dateFormat);\n};\n\nvar getLocaleDateStringFormat = userLocale => {\n  // istanbul ignore next\n  var locale = userLocale || navigator.language || \"en-US\"; // istanbul ignore next\n\n  return dateFormatLocaleMap[locale] || \"MM/dd/yyyy\";\n};\n\nvar tryParseDate = date => {\n  try {\n    var parsedValue = new Date(date);\n\n    if (isNaN(parsedValue.getDate())) {\n      throw INVALID_DATE;\n    }\n\n    return parsedValue;\n  } catch (ex) {\n    console.log(INVALID_DATE, ex);\n  }\n};\n\nexport { formatToLocalDate, getLocaleDateStringFormat, getTimeZoneAbbr };","map":{"version":3,"names":["format","dateFormatLocaleMap","INVALID_DATE","getTimeZoneAbbr","timeZoneAbbr","dateStr","Date","toTimeString","match","join","e","formatToLocalDate","date","locale","console","log","dateFormat","getLocaleDateStringFormat","dateToFormat","Object","prototype","toString","call","localDate","tryParseDate","getUTCFullYear","getUTCMonth","getUTCDate","userLocale","navigator","language","parsedValue","isNaN","getDate","ex"],"sources":["/Users/r0d025j/Documents/IMD/GT22/find-my-carrier/carrier-prediction-ui/node_modules/@seller-center/core-components/dist/esm/components/src/utility/date-format.js"],"sourcesContent":["import { format } from 'date-fns-tz';\nimport { dateFormatLocaleMap } from './constants.js';\nexport * from 'date-fns';\n\nvar INVALID_DATE = \"invalid date\";\nvar getTimeZoneAbbr = () => {\n  var timeZoneAbbr = \"\";\n\n  try {\n    var dateStr = new Date().toTimeString();\n    timeZoneAbbr = dateStr.match(/[A-Z](?!.*[(])/g).join(\"\");\n  } catch (e) {\n    // istanbul ignore next\n    timeZoneAbbr = \"CST\";\n  }\n\n  return timeZoneAbbr;\n};\nvar formatToLocalDate = (date, locale) => {\n  // istanbul ignore next\n  if (!date) {\n    console.log(INVALID_DATE, date);\n    return \"\";\n  }\n\n  var dateFormat = getLocaleDateStringFormat(locale);\n  var dateToFormat = date; // istanbul ignore next\n\n  if (Object.prototype.toString.call(date) !== \"[object Date]\") {\n    var localDate = tryParseDate(date);\n\n    if (!localDate) {\n      return \"\";\n    }\n\n    dateToFormat = new Date(localDate.getUTCFullYear(), localDate.getUTCMonth(), localDate.getUTCDate());\n  }\n\n  return format(dateToFormat, dateFormat);\n};\nvar getLocaleDateStringFormat = userLocale => {\n  // istanbul ignore next\n  var locale = userLocale || navigator.language || \"en-US\"; // istanbul ignore next\n\n  return dateFormatLocaleMap[locale] || \"MM/dd/yyyy\";\n};\n\nvar tryParseDate = date => {\n  try {\n    var parsedValue = new Date(date);\n\n    if (isNaN(parsedValue.getDate())) {\n      throw INVALID_DATE;\n    }\n\n    return parsedValue;\n  } catch (ex) {\n    console.log(INVALID_DATE, ex);\n  }\n};\n\nexport { formatToLocalDate, getLocaleDateStringFormat, getTimeZoneAbbr };\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,cAAc,UAAd;AAEA,IAAIC,YAAY,GAAG,cAAnB;;AACA,IAAIC,eAAe,GAAG,MAAM;EAC1B,IAAIC,YAAY,GAAG,EAAnB;;EAEA,IAAI;IACF,IAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,YAAX,EAAd;IACAH,YAAY,GAAGC,OAAO,CAACG,KAAR,CAAc,iBAAd,EAAiCC,IAAjC,CAAsC,EAAtC,CAAf;EACD,CAHD,CAGE,OAAOC,CAAP,EAAU;IACV;IACAN,YAAY,GAAG,KAAf;EACD;;EAED,OAAOA,YAAP;AACD,CAZD;;AAaA,IAAIO,iBAAiB,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;EACxC;EACA,IAAI,CAACD,IAAL,EAAW;IACTE,OAAO,CAACC,GAAR,CAAYb,YAAZ,EAA0BU,IAA1B;IACA,OAAO,EAAP;EACD;;EAED,IAAII,UAAU,GAAGC,yBAAyB,CAACJ,MAAD,CAA1C;EACA,IAAIK,YAAY,GAAGN,IAAnB,CARwC,CAQf;;EAEzB,IAAIO,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BV,IAA/B,MAAyC,eAA7C,EAA8D;IAC5D,IAAIW,SAAS,GAAGC,YAAY,CAACZ,IAAD,CAA5B;;IAEA,IAAI,CAACW,SAAL,EAAgB;MACd,OAAO,EAAP;IACD;;IAEDL,YAAY,GAAG,IAAIZ,IAAJ,CAASiB,SAAS,CAACE,cAAV,EAAT,EAAqCF,SAAS,CAACG,WAAV,EAArC,EAA8DH,SAAS,CAACI,UAAV,EAA9D,CAAf;EACD;;EAED,OAAO3B,MAAM,CAACkB,YAAD,EAAeF,UAAf,CAAb;AACD,CArBD;;AAsBA,IAAIC,yBAAyB,GAAGW,UAAU,IAAI;EAC5C;EACA,IAAIf,MAAM,GAAGe,UAAU,IAAIC,SAAS,CAACC,QAAxB,IAAoC,OAAjD,CAF4C,CAEc;;EAE1D,OAAO7B,mBAAmB,CAACY,MAAD,CAAnB,IAA+B,YAAtC;AACD,CALD;;AAOA,IAAIW,YAAY,GAAGZ,IAAI,IAAI;EACzB,IAAI;IACF,IAAImB,WAAW,GAAG,IAAIzB,IAAJ,CAASM,IAAT,CAAlB;;IAEA,IAAIoB,KAAK,CAACD,WAAW,CAACE,OAAZ,EAAD,CAAT,EAAkC;MAChC,MAAM/B,YAAN;IACD;;IAED,OAAO6B,WAAP;EACD,CARD,CAQE,OAAOG,EAAP,EAAW;IACXpB,OAAO,CAACC,GAAR,CAAYb,YAAZ,EAA0BgC,EAA1B;EACD;AACF,CAZD;;AAcA,SAASvB,iBAAT,EAA4BM,yBAA5B,EAAuDd,eAAvD"},"metadata":{},"sourceType":"module"}