{"ast":null,"code":"import { useEffect } from 'react'; // This file does not have 100% code coverage.\n\n/**\n * Trigger click event when clicking outside of a given ref.\n *\n * Original intention was to be placed on shim's or overlays (e.g. Modal).\n *\n * @see {@link https://github.com/gragland/usehooks/blob/master/src/pages/useOnClickOutside.md}\n *\n * @example\n * const ref1 = useRef();\n * const ref2 = useRef();\n *\n * useOnClickOutside(ref1);\n * useOnClickOutside([ref1, ref2]);\n *\n * @param {React.RefObject | React.RefObject[]} ref — Ref to manage outside click.\n * @param {Function} onClick — Click event handler.\n * @param {Object} options\n * @returns {void}\n */\n\nvar useOnClickOutside = function (ref, onClick) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  useEffect(() => {\n    var listener = event => {\n      var elementRef = Array.isArray(ref) ? ref : [ref];\n\n      if (elementRef.some(ref => {\n        var _ref$current;\n\n        return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(event.target);\n      })) {\n        return;\n      } // NOTE: Required to preserve focus return. We don't want to change\n      // focus to the newly clicked element, but instead leverage the\n      // focus trap's focus return.\n\n      /* istanbul ignore next */\n\n\n      if (!options.disablePreventDefault) {\n        event.preventDefault();\n      }\n\n      onClick(event);\n    };\n    /* istanbul ignore if: JSDOM has open issue for PointerEvent, which is undefined and mocking window.PointerEvent doesn't work properly */\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n\n    if (window.PointerEvent) {\n      /* istanbul ignore next */\n      document.addEventListener(\"pointerdown\", listener);\n    } else {\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n    }\n\n    return () => {\n      /* istanbul ignore if JSDOM has open issue for PointerEvent, which is undefined and mocking window.PointerEvent doesn't work properly */\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (window.PointerEvent) {\n        /* istanbul ignore next */\n        document.removeEventListener(\"pointerdown\", listener);\n      } else {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      }\n    };\n  }, [ref, onClick, options]);\n};\n\nexport { useOnClickOutside };","map":{"version":3,"names":["useEffect","useOnClickOutside","ref","onClick","options","listener","event","elementRef","Array","isArray","some","_ref$current","current","contains","target","disablePreventDefault","preventDefault","window","PointerEvent","document","addEventListener","removeEventListener"],"sources":["/Users/r0d025j/Documents/IMD/GT22/find-my-carrier/carrier-prediction-ui/node_modules/@seller-center/core-components/dist/esm/components/src/utility/useOnClickOutside.js"],"sourcesContent":["import { useEffect } from 'react';\n\n// This file does not have 100% code coverage.\n/**\n * Trigger click event when clicking outside of a given ref.\n *\n * Original intention was to be placed on shim's or overlays (e.g. Modal).\n *\n * @see {@link https://github.com/gragland/usehooks/blob/master/src/pages/useOnClickOutside.md}\n *\n * @example\n * const ref1 = useRef();\n * const ref2 = useRef();\n *\n * useOnClickOutside(ref1);\n * useOnClickOutside([ref1, ref2]);\n *\n * @param {React.RefObject | React.RefObject[]} ref — Ref to manage outside click.\n * @param {Function} onClick — Click event handler.\n * @param {Object} options\n * @returns {void}\n */\n\nvar useOnClickOutside = (ref, onClick, options = {}) => {\n  useEffect(() => {\n    var listener = event => {\n      var elementRef = Array.isArray(ref) ? ref : [ref];\n\n      if (elementRef.some(ref => {\n        var _ref$current;\n\n        return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(event.target);\n      })) {\n        return;\n      } // NOTE: Required to preserve focus return. We don't want to change\n      // focus to the newly clicked element, but instead leverage the\n      // focus trap's focus return.\n\n      /* istanbul ignore next */\n\n\n      if (!options.disablePreventDefault) {\n        event.preventDefault();\n      }\n\n      onClick(event);\n    };\n    /* istanbul ignore if: JSDOM has open issue for PointerEvent, which is undefined and mocking window.PointerEvent doesn't work properly */\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n\n    if (window.PointerEvent) {\n      /* istanbul ignore next */\n      document.addEventListener(\"pointerdown\", listener);\n    } else {\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n    }\n\n    return () => {\n      /* istanbul ignore if JSDOM has open issue for PointerEvent, which is undefined and mocking window.PointerEvent doesn't work properly */\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (window.PointerEvent) {\n        /* istanbul ignore next */\n        document.removeEventListener(\"pointerdown\", listener);\n      } else {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      }\n    };\n  }, [ref, onClick, options]);\n};\n\nexport { useOnClickOutside };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,iBAAiB,GAAG,UAACC,GAAD,EAAMC,OAAN,EAAgC;EAAA,IAAjBC,OAAiB,uEAAP,EAAO;EACtDJ,SAAS,CAAC,MAAM;IACd,IAAIK,QAAQ,GAAGC,KAAK,IAAI;MACtB,IAAIC,UAAU,GAAGC,KAAK,CAACC,OAAN,CAAcP,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,CAA5C;;MAEA,IAAIK,UAAU,CAACG,IAAX,CAAgBR,GAAG,IAAI;QACzB,IAAIS,YAAJ;;QAEA,OAAO,CAACA,YAAY,GAAGT,GAAG,CAACU,OAApB,MAAiC,IAAjC,IAAyCD,YAAY,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,YAAY,CAACE,QAAb,CAAsBP,KAAK,CAACQ,MAA5B,CAAnF;MACD,CAJG,CAAJ,EAII;QACF;MACD,CATqB,CASpB;MACF;MACA;;MAEA;;;MAGA,IAAI,CAACV,OAAO,CAACW,qBAAb,EAAoC;QAClCT,KAAK,CAACU,cAAN;MACD;;MAEDb,OAAO,CAACG,KAAD,CAAP;IACD,CArBD;IAsBA;IACA;;;IAGA,IAAIW,MAAM,CAACC,YAAX,EAAyB;MACvB;MACAC,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,EAAyCf,QAAzC;IACD,CAHD,MAGO;MACLc,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCf,QAAvC;MACAc,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwCf,QAAxC;IACD;;IAED,OAAO,MAAM;MACX;MACA;MACA,IAAIY,MAAM,CAACC,YAAX,EAAyB;QACvB;QACAC,QAAQ,CAACE,mBAAT,CAA6B,aAA7B,EAA4ChB,QAA5C;MACD,CAHD,MAGO;QACLc,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0ChB,QAA1C;QACAc,QAAQ,CAACE,mBAAT,CAA6B,YAA7B,EAA2ChB,QAA3C;MACD;IACF,CAVD;EAWD,CA9CQ,EA8CN,CAACH,GAAD,EAAMC,OAAN,EAAeC,OAAf,CA9CM,CAAT;AA+CD,CAhDD;;AAkDA,SAASH,iBAAT"},"metadata":{},"sourceType":"module"}